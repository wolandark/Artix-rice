**** BEGIN LOGGING AT Wed Nov 16 11:58:03 2022

Nov 16 12:03:21 »»	Now talking on #javascript
Nov 16 12:03:21 »»	Topic for #javascript is: RIP GreenJello https://git.io/J2m1C | JavaScript is *not* Java | Just ask your question | Don't paste code in the channel | Can't talk? Get registered ( https://git.io/vaTS2 )
Nov 16 12:03:21 »»	Topic for #javascript set by theskillwithin!theskillwi@user/theskillwithin at Tue Aug  2 15:33:56 2022
**** ENDING LOGGING AT Wed Nov 16 12:54:31 2022

**** BEGIN LOGGING AT Wed Nov 16 12:54:31 2022

**** ENDING LOGGING AT Wed Nov 16 12:55:12 2022

**** BEGIN LOGGING AT Wed Nov 16 12:55:12 2022

**** ENDING LOGGING AT Wed Nov 16 12:55:26 2022

**** BEGIN LOGGING AT Wed Nov 16 12:55:26 2022

**** ENDING LOGGING AT Wed Nov 16 12:55:46 2022

**** BEGIN LOGGING AT Wed Nov 16 12:55:46 2022

**** ENDING LOGGING AT Wed Nov 16 12:55:57 2022

**** BEGIN LOGGING AT Wed Nov 16 12:55:57 2022

Nov 16 13:46:22 .:fweht:.	i keep forgetting why `Array(n).fill(0)` is worse than `Array.from({length: n}, () => 0)`, is there some article on this, which i can bookmark?  maybe https://dev.to/mayankav/array-fill-is-secretly-broken-28k4 ?
Nov 16 14:04:11 .:systemfault:.	I've read the article, it doesn't seem broken to me... the opposite would have been broken
Nov 16 14:34:46 .:fweht:.	why is prettier formatting  `[-1 + 2 * x / y, -1 * 2 * x / y]`to `[-1 + (2 * x) / y, (-1 * 2 * x) / y]`?  seems inconsistent...
Nov 16 14:35:10 .:fweht:.	aah nevermind sorry!  my typo!
Nov 16 15:03:34 .:jafarlihi:.	Hello, how do I flatten an array like this: [{id: 1}, {id: 2}, {id: 3}]? I want to get [1, 2, 3]
Nov 16 15:06:18 .:jafarlihi:.	nvm map((e) => e.id) works
Nov 16 17:06:57 .:jwpapi:.	I’m trying to get my terminology right:
Nov 16 17:06:57 .:jwpapi:.	A worker thread in node is process that runs  simultaneously to other processes.
Nov 16 17:06:57 .:jwpapi:.	A worker dyno on heroku is a server that runs continually.
Nov 16 17:06:58 .:jwpapi:.	Are these statements correct?
Nov 16 17:07:50 .:jwpapi:.	When I want to have a server that listens to events and writes them into a database. I would need a worker dyno and not a worker thread? I could achieve the same thing with running my own environment on aws for example and use `forever` package?
Nov 16 17:39:45 »»	ChanServ sets modes (#javascript +b *!*@user/Intelo)
Nov 16 17:39:45 »»	ChanServ has kicked Intelo from #javascript (Banned: unwilling to stop cross-posting)
Nov 16 17:39:45 »»	ChanServ sets modes (#javascript +o litharge)
Nov 16 17:39:56 »»	litharge sets modes (#javascript -o litharge)
Nov 16 17:46:10 .:lf94:.	rip that guy
Nov 16 17:46:25 .:lf94:.	what would you call a number input or a text input? Is there some general term?
Nov 16 17:46:47 .:lf94:.	Both use a textbox
Nov 16 18:10:28 .:Sircle:.	Hi
Nov 16 18:10:41 .:Sircle:.	There is no way to run puppeteer in freebsd?
Nov 16 18:17:25 .:Sircle:.	Is this the only solution ? https://github.com/puppeteer/puppeteer/issues/5034#issuecomment-1236913615
Nov 16 18:23:03 .:johnny:.	Sircle, you're not gonna find many (or any) freebbsd users here. You'd probably be best off asking freebsd folks
Nov 16 18:23:49 .:Sircle:.	ok but they are not node/js devs
Nov 16 18:25:29 .:johnny:.	but that's actually referring to chromium not node
Nov 16 18:28:47 .:johnny:.	a specific build of chromium too with specific ./configure options. so it's up to the projects that need such things to do any fixing. it's nothing we can help with
Nov 16 18:30:00 .:johnny:.	it seems like a pretty simple workaround though, so i'm not sure why you're objecting to it
Nov 16 18:31:48 .:realies:.	any ideas on how to debug a timing out dependabot?
Nov 16 18:42:43 .:austincheney_:.	realies, if the bot worked in the past then progressively remove features one step at a time until it stops timing out.
Nov 16 18:46:41 .:Talon:.	is it possible to get an elements true background/text color if the style is either undefined or value of 'inherit' ?
Nov 16 18:51:10 .:austincheney_:.	Talon, try this https://developer.mozilla.org/en-US/docs/Web/API/Window/getComputedStyle
Nov 16 18:51:47 .:Talon:.	awesome austincheney_ thank you
Nov 16 20:00:53 .:twiclo1:.	I'm using HTMLImageElement.src to set the URL for an image on my website. The image sometimes 404s and I want to fall back on another URL in that case. I don't want to do something like checking the image, seeing it's valid, then doing another call to display it. I'd rather get it once and fall back if it fails
Nov 16 20:00:57 .:twiclo1:.	What can I do there?
Nov 16 20:02:14 .:Alexendoo:.	You could listen for the error event twiclo1
Nov 16 20:03:01 .:twiclo1:.	I'm not very well versed with JS. What would that look like?
Nov 16 20:03:09 .:twiclo1:.	Is there some .on_err function?
Nov 16 20:06:22 .:Alexendoo:.	img.addEventListener("error", event => { ... });
Nov 16 20:08:46 .:twiclo1:.	Arent event listeners discouraged now?
Nov 16 20:08:59 .:twiclo1:.	I thought they were supplanted by something
Nov 16 20:13:04 .:Alexendoo:.	onevent properties (e.g. here that would be img.onerror = ...) and inline event handlers (<img onerror="..">) are discouraged, addEventListener being the thing to use instead
Nov 16 20:17:31 .:twiclo1:.	Alexendoo: How's this? https://p.twil.cx/lox.js
Nov 16 20:18:08 .:twiclo1:.	Doesn't look like it's working
Nov 16 20:18:15 .:twiclo1:.	(maxres is the one that often fails)
Nov 16 20:22:13 .:asteele:.	does the error event fire?
Nov 16 20:24:34 .:twiclo1:.	Not sure why I didn't think of that haha
Nov 16 20:24:37 .:twiclo1:.	Let me see
Nov 16 20:26:13 .:twiclo1:.	No it is not
Nov 16 20:26:39 .:twiclo1:.	I must be subscribing to the wrong event. How can I see the list of possible events
Nov 16 20:27:24 .:twiclo1:.	https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement#errors
Nov 16 20:28:06 .:twiclo1:.	So I guess onerror instead of error
Nov 16 20:28:25 .:twiclo1:.	Still nothing
Nov 16 20:29:56 .:twiclo1:.	https://developer.mozilla.org/en-US/docs/Web/API/Element/error_event
Nov 16 20:30:04 .:twiclo1:.	Okay it is 'error' but my event still isn't firing
Nov 16 20:44:47 .:asteele:.	twiclo1 is the 404 not returning the proper way or something
Nov 16 20:45:07 .:asteele:.	a quick look shows that the error event should trigger on 404, but if it isnt, i would look into why not
Nov 16 20:45:35 .:leptone:.	My reducer is not setting the state correctly when strict mode is set. Anyone know what could be going on? https://stackoverflow.com/questions/74463125/reducer-sets-wrong-state-in-reacts-strict-mode
Nov 16 20:48:45 .:twiclo1:.	asteele: It definitely returns a 404. Here's the url: https://i.ytimg.com/vi/lD4qujGZiLw/maxresdefault.jpg
Nov 16 20:49:28 .:velix:.	Can sessionStorage be read from another website, e.g. be abused for tracking?
Nov 16 20:51:58 .:asteele:.	velix no it functions like localStorage, except it clears on every page load
Nov 16 20:52:11 .:asteele:.	so each storage area is restricted by origin
Nov 16 20:52:33 .:asteele:.	or sorry when the 'page session' ends, not necessarily every page load
Nov 16 20:53:37 .:velix:.	I thought localStorage *can* be abused for tracking.
Nov 16 20:53:48 .:velix:.	That was the badness of localStorage.
Nov 16 20:54:05 .:velix:.	YOu can set a cookie to a single domain only, but you can't do with localStorage.
Nov 16 20:55:32 .:Alexendoo:.	That is not the case
Nov 16 20:55:33 .:velix:.	Oh, you seem to be right:" Let's talk about something more fun, localStorage! In contrast to the pesky sessionStorage, it persists application wide, the application being your browser. As a security measure, your browser will automatically file the saved values by domain (just like with the sessionStorage), so you can kind of put secret stuff in there."
Nov 16 20:55:40 .:velix:.	I HATE OUR FRONTEND GUY!
Nov 16 20:55:44 .:velix:.	He said: both can be tracked.
Nov 16 20:55:51 .:velix:.	Really, I have to talk with the professor to get him fired.
Nov 16 20:56:33 .:asteele:.	velix my quick research shows that the main problem with localstorage would be that a third party library you load, could be malicious, and it would have access to the localstorage/sessionstorage, and can ship that data out obviously
Nov 16 20:57:12 .:velix:.	asteele: yeah. but that's the problem with cookies, too. But you can access to scripts.
Nov 16 20:57:27 .:velix:.	but you can BLOCK cookies' access to tscripts
Nov 16 20:58:40 .:naeluh:.	Hey does nvm provide a way to remove node modules ? haha
Nov 16 20:59:51 .:asteele:.	naeluh not sure i follow, which modules? nvm will switch your node version, then on each version you have global packages that can be removed as normal, or within a project it would be normal and not nvm related?
Nov 16 21:00:36 .:earthToAdam:.	Hello-hello-hello
Nov 16 21:00:54 .:asteele:.	hi
Nov 16 21:01:46 .:naeluh:.	I was just looking to clean up my computer and realized that I have multiple versions of node and multiple local and global versions of node modules and was thinking it would be interesting if nvm could manage some of that I know it doesn't do that I was just seeing what others thought
Nov 16 21:01:54 .:naeluh:.	earthToAdam: hello ~
Nov 16 21:02:05 .:earthToAdam:.	Hi naeluh
Nov 16 21:02:11 .:earthToAdam:.	hi asteele
Nov 16 21:02:38 .:asteele:.	hmm not to my knowledge naeluh, maybe someone else is aware
Nov 16 21:02:59 .:earthToAdam:.	asteele don't suppose one of those versions was installed with home brew?
Nov 16 21:03:13 .:asteele:.	i assume wrong ping earthToAdam
Nov 16 21:03:37 .:blahboybaz:.	I don't understand why this doesn't work. Is it just that I'm not printing the right thing to the console? Or is my code not worlking as intended. I pasted my little code here:  https://dpaste.org/ApAkt  My intended result is to use this useReducer hook to manage an array of objects. Its just a test case / learning experience now. I've read the docs on events and on the hook I"m using and on forms
Nov 16 21:03:38 .:naeluh:.	earthToAdam: you can manage node through home brew
Nov 16 21:03:43 .:blahboybaz:.	and forms with react (sometimes more than once) and forum posts where similar questions are asked and I've tried the few things I could think of to make it work - but to no avail. It APPEARS to be storing an empty object rather than an object with one property storing a string. Why?
Nov 16 21:03:45 .:earthToAdam:.	oh versions of node (modules!)
Nov 16 21:03:50 .:blahboybaz:.	https://dpaste.org/ApAkt
Nov 16 21:03:59 .:naeluh:.	or its version you installed
Nov 16 21:04:42 .:earthToAdam:.	naeluh just manage them using package.json. Delete the node_modules folder and npm install
Nov 16 21:05:35 .:KevinX:.	access token goes in memory and expires every 15m (or less), refresh token goes in a cookie and expires when you want (90 days?). Your server should be set up to invalidate a refresh token which would then revoke the access token
Nov 16 21:05:37 .:naeluh:.	blahboybaz: on change on an input type of text maybe ?
Nov 16 21:05:50 .:earthToAdam:.	Hi KevinX
Nov 16 21:06:03 .:KevinX:.	hi
Nov 16 21:06:13 .:KevinX:.	naeluh there's a cli tool for that. let me find it
Nov 16 21:06:13 .:blahboybaz:.	naeluh: There is that going on, yes. Is that wrong?
Nov 16 21:08:11 .:realies:.	austincheney, it worked a while ago and there has been a lot of changes since then
Nov 16 21:09:15 .:naeluh:.	actually blahboybaz does state.data does state actually have the data object on it ?
Nov 16 21:09:32 .:naeluh:.	KevinX: cool thanks !
Nov 16 21:11:44 .:earthToAdam:.	Has anyone used Supabase inside Docker (self hosted). Or even cloud hosted? I am looking for a PaaS RDBMS that comes pre-packages with GraphQL... SupabaseDB looked good...?
Nov 16 21:11:57 .:KevinX:.	naeluh for deleting node versions I believe you would use nvm directly
Nov 16 21:12:01 .:blahboybaz:.	naeluh: After entering text into the fild and pressing enter or clicking the button - the console shows an array of length 1 that (seems to) contain an empty object. I say 'seems to' bc maybe I'm not interpreting it right. It looks like this in the console output: [{...}]  and it does that for every succeeding entry (array of size 1)
Nov 16 21:12:03 .:KevinX:.	But for finding stuff, https://github.com/voidcosmos/npkill
Nov 16 21:12:22 .:blahboybaz:.	fild\field
Nov 16 21:12:37 .:earthToAdam:.	Or maybe CockroachDB + Hasura?
Nov 16 21:14:27 .:naeluh:.	blahboybaz: maybe this helps ?
Nov 16 21:14:28 .:naeluh:.	https://beta.reactjs.org/apis/react/useReducer#examples-basic
Nov 16 21:14:42 .:blahboybaz:.	Thanks I'll take a look
Nov 16 21:16:48 .:KevinX:.	put the code somewhere where it executes and you will have an answer in 30 seconds
Nov 16 21:16:56 .:KevinX:.	Why keep just sharing a paste?
Nov 16 21:17:25 .:KevinX:.	By doing that you're asking others to copy/paste it into codesandbox or elsewhere
Nov 16 21:17:32 .:blahboybaz:.	naeluh: I've looked at that page a thousand times (not that I couldn't miss something - that's now what I'm saying). Its just that example is using an object in state not an array and that's where this struggle began. I had decided to use it as a learning exercise to try and manage an array of objects with that hook (and it does seem to be possible from what others are saying). I'm just not seeing
Nov 16 21:17:38 .:blahboybaz:.	where the problem lies.
Nov 16 21:17:41 .:blahboybaz:.	I will go over that example again though
Nov 16 21:19:13 .:blahboybaz:.	Actually, I can write the code to manage an object in state with that hook - I've done that
Nov 16 21:21:10 .:blahboybaz:.	For some reason I keep looking at line 23 in that paste and wondering if event.target.value is being set on that input property. Then I look at my input element's value attribut and wonder if it's value is correct
Nov 16 21:21:58 .:dob1:.	using this console.log(new Intl.DateTimeFormat(some_locale, { dateStyle: 'full', timeStyle: 'long' }).format(new Date()));   can I be sure that it will be printed if locale is valid?  I mean every browser supports every locale ?
Nov 16 21:23:48 .:naeluh:.	blahboybaz: maybe try naming your state objects instead of doing spread
Nov 16 21:24:36 .:naeluh:.	so like `case 'ADD': { return { name: state.name }; }`
Nov 16 21:24:51 .:naeluh:.	I am not sure state.data exists
Nov 16 21:26:55 .:dob1:.	I need to specify a valid/supported locale
Nov 16 21:27:44 .:blahboybaz:.	naeluh: I'm not sure what you mean.. Its an array that I'm trying to have in state; and, if I'm not mistaken, I should be able to put whatever I want into the array.   btw - If I change `type={state.data}` to `type={state}` I get `[object Object]`as the placeholder in my input field on the page
Nov 16 21:30:04 .:naeluh:.	bl
Nov 16 21:30:26 .:redcat:.	I am adding a console.log to a node_modules file, and using yarn build; yarn start but that change does not apply to the outputted file
Nov 16 21:30:33 .:naeluh:.	blahboybaz: ok go back to your older code where you were getting [{...}]
Nov 16 21:30:42 .:naeluh:.	and use this to console log
Nov 16 21:31:09 .:naeluh:.	console.log(JSON.stringify(YOUR_VALUE_HERE, null, 2))
Nov 16 21:31:32 .:naeluh:.	see if that gives you more info
Nov 16 21:33:32 .:blahboybaz:.	naeluh: Yeah.. I spend nours doing these same tweaks last night and getting various problems..  Its just getting difficult and frustrating to try to describe each different problem that is created when trying differnt things
Nov 16 21:33:47 .:blahboybaz:.	I came here at the end of my rope with this thing
Nov 16 21:37:05 .:Sircle:.	There is no way to run puppeteer in freebsd? this does not works even  https://github.com/puppeteer/puppeteer/issues/5034#issuecomment-1236913615
Nov 16 21:39:48 .:blahboybaz:.	yeah, using that console log just verifies it is an array with a single empty object in it even for every succeeding entry
Nov 16 21:40:21 .:naeluh:.	blahboybaz: what is supposed to happen when I click add ?
Nov 16 21:42:55 .:naeluh:.	Add the name to an array?
Nov 16 21:43:25 .:blahboybaz:.	naeluh: Suppose you enter 'something' into the field and click the ADD button. The state should be changed to  [{data: 'something'}]
Nov 16 21:44:11 .:blahboybaz:.	And if you then type 'else' into the fild and click the ADD button you should get [{data: 'something'}, {data: 'else'}]
Nov 16 21:44:19 .:blahboybaz:.	and so on
Nov 16 21:45:23 .:earthToAdam:.	Ahha!
Nov 16 21:47:59 .:earthToAdam:.	It's amazing how I can stare at an error for 20 minutes, totally confused. Then I figure it out on my own and realize, if I had just READ the damn error message, it would have told me exactly what was wrong!
Nov 16 21:50:23 .:onosendi:.	earthToAdam: heh, that's happened to me too.
Nov 16 21:50:47 .:blahboybaz:.	Somehow the value of my value attribute is bothering me. If state is an array of objects then `value={state}` would be an array of objects in the succeeding entries to that field? And I'm not sure that `value={state.data}` is valid
Nov 16 21:50:57 .:earthToAdam:.	aggravating!
Nov 16 21:53:00 .:@ljharb:.	naeluh: nvm only manages node, so you can certainly remove node versions with it
Nov 16 21:53:43 .:earthToAdam:.	Hi ljharb
Nov 16 21:56:17 .:earthToAdam:.	I am looking for an SQL equivalent to Firebase. Something with GraphQL already pre-configured. Supabase seems to be getting a lot of attention. And I like the idea of being able to self-host. Has anyone given this a test-drive yet?
Nov 16 21:56:59 .:earthToAdam:.	I also like that it's open source and runs PostgreSQL under the hood...
Nov 16 21:58:09 .:blahboybaz:.	I have to go to an appointment. I'll have to deal with it later on
Nov 16 21:58:12 .:earthToAdam:.	I'm also looking at Cockroach DB... but that's just because I like the name :D
Nov 16 21:58:15 .:blahboybaz:.	naeluh: ^
Nov 16 22:00:01 .:naeluh:.	ljharb: word yeah I was just trying to find a way to manage the mess I have created thanks !
Nov 16 22:00:17 .:naeluh:.	blahboybaz: ok I think I almost have something for you
Nov 16 22:00:32 .:earthToAdam:.	Hmm... should also be ACID compliant.
Nov 16 22:01:16 .:blahboybaz:.	naeluh: oh ok.. I wasn't sure what was going on. I'll be here another 20 min getting ready. I just wanted to let know before the last minute came
Nov 16 22:01:22 .:@ljharb:.	earthToAdam: how about an actual sql server
Nov 16 22:01:40 .:earthToAdam:.	ljharb Azure SQL?
Nov 16 22:01:50 .:@ljharb:.	lol no
Nov 16 22:01:53 .:@ljharb:.	like host your own
Nov 16 22:01:58 .:@ljharb:.	mysql or postgres
Nov 16 22:02:00 .:earthToAdam:.	ljharb ah like node + express
Nov 16 22:02:03 .:@ljharb:.	yes
Nov 16 22:02:04 .:@ljharb:.	normal stuff
Nov 16 22:02:50 .:earthToAdam:.	ljharb in the future, I would love to. But I'm trying to keep it simple, as my current experience is 99.9999% on the front-end.
Nov 16 22:03:40 .:earthToAdam:.	I'm working on a CRM, so needs to be SQL. But I thought if I could find a DB-as-a-service option, I could tip-toe into it...
Nov 16 22:03:55 .:@ljharb:.	then look for a service that's standard mysql or postgres and lets you easily export the entire db
Nov 16 22:04:17 .:blahboybaz:.	I would imagine its difficult for others to grasp just how much effort has been put into trying to solve this before I came here. I just looked at my git history and my last commit was on the 10th (6 days ago). I started on this just minutes after making that commit. If I had to guess I'm sure I've spent a solid 20 hrs on this thing and tried everything I could think of, read everything I could
Nov 16 22:04:22 .:earthToAdam:.	ljharb ah, I like that. Yeah, I don't want to get stuck is some proprietary platform.
Nov 16 22:04:23 .:blahboybaz:.	think to look at.. I'm disgusted with it at this point but I can't let it go. I can't let it beat me
Nov 16 22:06:26 .:earthToAdam:.	ljharb any that you can recommend?
Nov 16 22:06:42 .:johnny:.	a lot of providers offer one these days
Nov 16 22:06:48 .:johnny:.	liek if you're using digitalocean they have them
Nov 16 22:07:15 .:johnny:.	you would probably want it as close to where your web app is acutally hosted
Nov 16 22:07:58 .:earthToAdam:.	johnny ah that's interesting. Was thinking Netlify.
Nov 16 22:08:30 .:johnny:.	well think about it.. do you want your database calls to cross the entire internet?
Nov 16 22:08:44 .:earthToAdam:.	johnny No! Good call.
Nov 16 22:09:08 .:naeluh:.	blahboybaz:
Nov 16 22:09:09 .:johnny:.	having them in the same network is best unitl you get fancy with replication and stuff
Nov 16 22:09:17 .:johnny:.	and cross region stuff
Nov 16 22:09:33 .:earthToAdam:.	CDN/edge computing?
Nov 16 22:09:34 .:johnny:.	it is kind of a single point of failure .. but it's probably worth it in the short term until you go fancy
Nov 16 22:09:53 .:earthToAdam:.	johnny i like that... kiss
Nov 16 22:09:55 .:naeluh:.	you need to change this event: "ADD" to  type: "ADD" and then that should start working in your dispatch function
Nov 16 22:10:02 .:naeluh:.	blahboybaz: ^
Nov 16 22:10:29 .:blahboybaz:.	naeluh: I'm here
Nov 16 22:10:30 .:johnny:.	we're gonna have to dispatch the police to blahboybaz due to noise complaints of throwing computers against the wall
Nov 16 22:10:37 .:earthToAdam:.	ljharb johnny thanks!
Nov 16 22:10:54 .:johnny:.	blahboybaz, but 20 hours on this sort of thing isn't abnormal though :(
Nov 16 22:11:00 .:johnny:.	i've spent hours on the stupidest stuff
Nov 16 22:11:23 .:naeluh:.	action.type was undefined
Nov 16 22:11:40 .:naeluh:.	blahboybaz: in your reducer function
Nov 16 22:11:50 .:blahboybaz:.	johnny: I suppose that's comforting
Nov 16 22:12:02 .:blahboybaz:.	naeluh: I'll look
Nov 16 22:12:36 .:naeluh:.	blahboybaz: https://codepen.io/team/codepen/pen/WNvZoxd
Nov 16 22:12:47 .:blahboybaz:.	naeluh: what do you mean change event to type? I'm not seeing this
Nov 16 22:13:22 .:naeluh:.	whoops that link didn't work at all hahaa
Nov 16 22:14:10 .:naeluh:.	https://codepen.io/naeluh/pen/xxzXgpx?editors=0011
Nov 16 22:14:36 .:naeluh:.	blahboybaz: in your original post
Nov 16 22:14:49 .:naeluh:.	you had this dispatch function
Nov 16 22:15:34 .:blahboybaz:.	naeluh: Really appreciate. I'm sorry but I'll have to look at it when I get back in a couple hrs. I have the tab open to that link so its there for me. If you're around later I'll let you know it worked and what I learned. Thank you
Nov 16 22:15:36 .:naeluh:.	` dispatch({ event: "ADD", payload: { data: event.target.value }});`
Nov 16 22:16:01 .:naeluh:.	event doesn't exist but type does
Nov 16 22:16:19 .:naeluh:.	action.type is what your switch uses not action.event
Nov 16 22:16:41 .:naeluh:.	this is what your want
Nov 16 22:16:42 .:naeluh:.	  dispatch({ type: "ADD", payload: { data: event.target.value }});
Nov 16 22:17:07 .:naeluh:.	blahboybaz: no prob you will get it !
Nov 16 22:17:15 .:blahboybaz:.	thanks man
Nov 16 22:17:21 .:blahboybaz:.	catch you next time
Nov 16 23:20:18 .:Uhfgood:.	is setTimeout the only way I can delay a callback from firing?
Nov 16 23:22:04 .:Sircle:.	There is no way to run puppeteer in freebsd? this does not works even  https://github.com/puppeteer/puppeteer/issues/5034#issuecomment-1236913615
Nov 16 23:33:12 .:austincheney:.	Sircle, does your test automation have to be puppeteer?  I have a test automation approach that is just TypeScript and Node.js if you are interested
Nov 16 23:33:33 .:Sircle:.	austincheney we have written a lot of code in puppeteer already
Nov 16 23:36:52 .:Sircle:.	ljharb are you one of puppeteer maintainers?
Nov 16 23:50:07 .:@ljharb:.	nope
Nov 17 00:18:03 .:buu:.	Is there a way to get eslint to throw an error on `foo.forEach( async(bar) => await flibble(bar) )` type code?
Nov 17 00:18:21 .:buu:.	I have the 'no-unhandled-promises' plugin but this one slips by it
Nov 17 00:21:15 .:joepie91:.	buu: from a quick search, https://eslint.org/docs/latest/rules/no-return-await
Nov 17 00:21:31 .:joepie91:.	that looks closest?
Nov 17 00:21:53 .:austincheney:.	buu, you can make custom rules using their parsing rules
Nov 17 00:23:42 .:systemfault:.	It's not what buu is asking if I understand properly.
Nov 17 00:23:50 .:systemfault:.	The problem is the usage of .forEach
Nov 17 00:24:29 .:systemfault:.	.forEach discards its return value, it means that you'll get an unhandled promise rejection on failure.
Nov 17 00:27:09 .:joepie91:.	oh, I misread
Nov 17 00:28:10 .:buu:.	yeah, that
Nov 17 00:28:12 .:austincheney:.	this is the ESLint selector to identify an async keyword: "FunctionDeclaration[id.name='asyncCall']"
Nov 17 00:28:15 .:buu:.	also it blows up this stupid orm
Nov 17 00:28:55 .:austincheney:.	you will need a separate similar rule to identify forEach and then if the former resides as an argument of the later
Nov 17 00:30:13 .:austincheney:.	forEach might be: "ExpressionStatement[expression.callee.property.name='forEach']"
Nov 17 00:30:24 .:buu:.	hmm
Nov 17 00:30:26 .:buu:.	"Eslint: Promise returned in function argument where a void return was expected."
Nov 17 00:30:38 .:buu:.	That sounds promising
Nov 17 00:31:22 .:austincheney:.	buu, that will only work if the function passed into the forEach returns a promise.  You don't want any promise at all in your forEach
Nov 17 00:32:13 .:buu:.	austincheney: er, yes, an async function returns a promise
Nov 17 00:32:23 .:buu:.	and you can't use await without declaring it async
Nov 17 00:38:44 .:blueagain:.	buu: https://typescript-eslint.io/rules/no-misused-promises/#checksvoidreturn
Nov 17 00:39:04 .:blueagain:.	I don't use typescript, but that's the thing that popped up for me
Nov 17 00:53:39 .:buu:.	blueagain: Yeah, that's where I ended up, it looks solid
Nov 17 00:55:46 .:buu:.	n> async function foo(){ return false } if(foo()) { console.log("promises are always true, I assume") }
Nov 17 00:55:48 .:+jellobot:.	(okay) promises are always true, I assume
Nov 17 00:55:52 .:buu:.	yep
Nov 17 01:01:24 .:@ljharb:.	promises are objects, so yes
Nov 17 01:04:00 .:austincheney:.	where I work nobody has any idea what async logic is for so they abuse promise all the time just for error handling.  It really makes me want to implement rules that ban the use of promises and async functions so that async logic is more expensive for them to write, because really most of the code instances are only convenience to avoid writing proper logic
Nov 17 01:06:44 .:buu:.	austincheney: I'm still fighting with this stupid orm which has no idea if a socket is currently inside a transaction so if you don't await everything just right or call two separate database calls in the wrong order it explodes
Nov 17 01:06:48 .:buu:.	violently
Nov 17 01:07:21 .:austincheney:.	what do you mean inside a transaction?
Nov 17 01:07:25 .:austincheney:.	and what is an orm?
Nov 17 01:08:31 .:buu:.	austincheney: transactions are database concepts where you perform several operations inside a single.. batch
Nov 17 01:08:38 .:buu:.	so you can apply or rollback all of them at once
Nov 17 01:08:43 .:buu:.	sort of like a git commit
Nov 17 01:08:50 .:austincheney:.	sounds like a sql sproc
Nov 17 01:09:25 .:buu:.	sprocs typically run inside transactions, but are technically orthogonal
Nov 17 01:10:42 .:austincheney:.	the way I would do it is to set a property on the socket object to indicate the socket is currently busy (awaiting the DB to finish) and then the db call a node event which reverts that socket status property to something like "open"
Nov 17 01:11:24 .:austincheney:.	a single socket should only be handling a single message at a single time from a queue unless you have special logic in place for message interlacing
Nov 17 01:14:10 .:austincheney:.	or really, you shouldnt have to wait on the DB at all.  You can write to the DB in one direction with a message id and have the DB write a response to the socket containing that message id.  That way everything is event driven and your message queue is only congested by message traffic instead of long DB operations
Nov 17 01:16:15 .:austincheney:.	the primary benefit of sockets is that you are not bottlenecked by round trips the way http is
Nov 17 01:20:08 .:primitivMedia:.	my .trigger() is not working
Nov 17 01:20:09 .:primitivMedia:.	why
Nov 17 01:20:23 .:austincheney:.	what is .trigger?
Nov 17 01:21:19 .:primitivMedia:.	oh wait it might be jquery
Nov 17 01:24:04 .:jazzy:.	so you know how you can do
Nov 17 01:24:10 .:jazzy:.	n> Array.from({length: 10})
Nov 17 01:24:11 .:+jellobot:.	(okay) [ undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined ]
Nov 17 01:24:20 .:jazzy:.	what are some other props you can use in that object to customize?
Nov 17 01:24:55 .:jazzy:.	n> Array.from({}, (_, i, a) => a)
Nov 17 01:24:56 .:+jellobot:.	(okay) []
Nov 17 01:25:20 .:jazzy:.	^didn't mean to do that in here
Nov 17 01:26:43 .:Alexendoo:.	jazzy:
Nov 17 01:26:45 .:Alexendoo:.	Oops
Nov 17 01:27:10 .:Alexendoo:.	It takes an iterator or an array-like, {length: 10} is a way to provide an array-like, it's not like a configuration option
Nov 17 01:27:22 .:jazzy:.	what the
Nov 17 01:28:26 .:jazzy:.	Alexendoo, do you know of any resources that illustrate most of the useful things you can do with this?
Nov 17 01:28:48 .:jazzy:.	!Array.from
Nov 17 01:28:52 .:jazzy:.	welp
Nov 17 01:29:10 .:fffuuuL:.	n> ({length: 10}).length
Nov 17 01:29:11 .:+jellobot:.	(okay) 10
Nov 17 01:30:22 .:jazzy:.	oh wait I guess the defining characteristic of an arrayLike is an object with a length prop?
Nov 17 01:30:55 .:jazzy:.	n> Array.prototype.slice({length: 10})
Nov 17 01:30:55 .:+jellobot:.	(okay) []
Nov 17 01:31:23 .:jazzy:.	n> Array.prototype.slice({0: 'a', 1: 'b', 5: 'c'})
Nov 17 01:31:24 .:+jellobot:.	(okay) []
Nov 17 01:31:30 .:fffuuuL:.	yeh, i think length property is most important
Nov 17 01:31:32 .:jazzy:.	n> Array.prototype.slice.call({0: 'a', 1: 'b', 5: 'c'})
Nov 17 01:31:32 .:+jellobot:.	(okay) []
Nov 17 01:33:07 .:jazzy:.	n> Array.from({length: 'invalid'})
Nov 17 01:33:08 .:+jellobot:.	(okay) []
Nov 17 01:33:15 .:jazzy:.	n> Array.from({length: 'invalid'}).length
Nov 17 01:33:16 .:+jellobot:.	(okay) 0
Nov 17 01:33:29 .:@ljharb:.	jazzy: doesn't even have to have a length prop
Nov 17 01:33:38 .:@ljharb:.	n> Array.from({})
Nov 17 01:33:38 .:+jellobot:.	(okay) []
Nov 17 01:33:48 .:jazzy:.	I see
Nov 17 01:33:50 .:fffuuuL:.	🙄
Nov 17 01:33:57 .:@ljharb:.	what's most useful is `Array.from`'s mapper argument
Nov 17 01:34:09 .:jazzy:.	Array.from({length: 10}, (_, i) => i + 1)
Nov 17 01:34:13 .:@ljharb:.	indeed
Nov 17 01:34:16 .:jazzy:.	n> Array.from({length: 10}, (_, i) => i + 1)
Nov 17 01:34:17 .:+jellobot:.	(okay) [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ]
Nov 17 01:34:21 .:jazzy:.	yea das nice
Nov 17 01:34:38 .:jazzy:.	can do evens, odds, all kinds of stuff
Nov 17 01:36:26 .:buu:.	austincheney: Yes, they should have done that, but did not in fact do that, and now I am suffering
Nov 17 01:37:16 .:buu:.	austincheney: Or rather, they actually made that assumption that you can write multiple things and wait on the responses which works fine until you introduce transactions
Nov 17 01:38:04 .:austincheney:.	they were treating like http
Nov 17 01:38:17 .:buu:.	Once you start a transaction everything you write on that socket is now part of that transaction
Nov 17 01:38:27 .:austincheney:.	http will open a new socket per request, which is why messages work in parallel there
Nov 17 01:38:43 .:buu:.	Well, http doesn't have any state
Nov 17 01:38:54 .:buu:.	so you can interlace requests/responses over a single socket
Nov 17 01:39:07 .:buu:.	aka keepalive and http2 and so forth
Nov 17 01:39:18 .:buu:.	db sockets have state
Nov 17 01:39:49 .:austincheney:.	keepalive keeps a socket open to maintain a connection, which has nothing to do with multiple sockets for parallel requests
Nov 17 01:40:33 .:austincheney:.	you can only interlace messages over a single socket if you have logic in place to demux the message frames on the remote end
Nov 17 02:32:39 .:ThePendulum:.	anyone else struggle to get the Vue chrome dev tools to show up? sometimes they do, sometimes they don't, on the same site
Nov 17 02:35:04 .:ThePendulum:.	seems like after a crash it just won't reload itself automatically, need to re-enable it in the browser settings
Nov 17 02:49:17 .:johnny:.	you won't get much vue help here
Nov 17 02:49:36 .:johnny:.	they do have discord. i know that
Nov 17 02:48:43 »»	Disconnected ().
**** ENDING LOGGING AT Thu Nov 17 02:48:43 2022

**** BEGIN LOGGING AT Thu Nov 17 02:49:03 2022

Nov 17 02:54:22 »»	Now talking on #javascript
Nov 17 02:54:22 »»	Topic for #javascript is: RIP GreenJello https://git.io/J2m1C | JavaScript is *not* Java | Just ask your question | Don't paste code in the channel | Can't talk? Get registered ( https://git.io/vaTS2 )
Nov 17 02:54:22 »»	Topic for #javascript set by theskillwithin!theskillwi@user/theskillwithin at Tue Aug  2 15:33:56 2022
Nov 17 02:55:58 .:theskillwithin:.	the devtools might be set to not show up on production builds
Nov 17 02:56:34 .:theskillwithin:.	try uninstalling the extension and re-installing
Nov 17 03:25:09 .:velix:.	good night
Nov 17 04:17:41 .:trafficjam:.	can fs.readJson() even return an object? (from 'fs-extra')
Nov 17 04:18:23 .:trafficjam:.	I can log the object, but if I try to return it and set a variable to that value, it gives me undefined
Nov 17 04:46:30 .:blahboybaz:.	naeluh: I see what you were referring to. I had a wrong property name in my dispatch function. I also saw a new hook you were showing me in the paste:  https://codepen.io/blahboybaz/pen/gOKGxzQ?editors=0011  the useRef hook. I read the beta doc on that. How come multiple objects are created for one submit though? Is that something to do with how the input element takes in its data?
Nov 17 04:46:36 .:blahboybaz:.	https://imgur.com/a/HCqrA0Y
Nov 17 04:49:20 .:blahboybaz:.	I'd be happy to look it up/reasearch it but I'm not sure what to even look for - don't know what to even call that
Nov 17 04:50:30 .:blahboybaz:.	Its like it accumulates the characters adding the next one to the previous set until it reaches the end
Nov 17 04:59:49 .:buu:.	blahboybaz: er, isn't that what your action ADD does?
Nov 17 04:59:55 .:buu:.	return [...state, action.payload];
Nov 17 05:00:25 .:buu:.	blahboybaz: "onChange" is triggered every time the value changes
Nov 17 05:00:51 .:buu:.	It has nothing to do with submit and everything to do with how you implemented ADD and onChange
Nov 17 05:00:13 »»	Disconnected ().
**** ENDING LOGGING AT Thu Nov 17 05:00:13 2022

**** BEGIN LOGGING AT Thu Nov 17 05:04:10 2022

Nov 17 05:09:29 »»	Now talking on #javascript
Nov 17 05:09:29 »»	Topic for #javascript is: RIP GreenJello https://git.io/J2m1C | JavaScript is *not* Java | Just ask your question | Don't paste code in the channel | Can't talk? Get registered ( https://git.io/vaTS2 )
Nov 17 05:09:29 »»	Topic for #javascript set by theskillwithin!theskillwi@user/theskillwithin at Tue Aug  2 15:33:56 2022
Nov 17 05:11:39 .:blahboybaz:.	no, that obviously makes no difference to the outcome
Nov 17 05:22:54 .:buu:.	> People would certainly want it to only store the data after it is submitted
Nov 17 05:23:16 .:buu:.	Not exactly, you generally want a "backing object" that stores all the values currently contained in your form fields
Nov 17 05:24:02 .:buu:.	Obviously this isn't exactly required but it's generally easier to have your UI, in this case the input fields, reflect your data object, rather than vice versa
Nov 17 05:24:58 .:buu:.	In very broad terms, you say something like let mydata ={field1: 42}; then you tell react that mydata.field1 should be the value that input id=field1 shows
Nov 17 05:25:21 .:buu:.	Then when you want to submit the data, you just have to look at what is currently in mydata
Nov 17 05:25:24 .:buu:.	For example.
Nov 17 05:26:31 .:buu:.	A slightly more useful example is if you want a field to only allow numbers in it, and you want it stored in `mydata.numberfield`, you don't want `.numberfield` to ever contain a letter, so you write an onchange listener that checks the new current value of your input field and if it contains a letter you revert to whatever is currently in `mydata.numberfield`
Nov 17 05:27:42 .:trafficjam:.	What determines whether I should use sync/async for serverless functions?
Nov 17 05:30:02 .:blahboybaz:.	buu: forms are confusing
Nov 17 05:31:41 .:buu:.	trafficjam: do you ever need to wait on some network or filesystem operation to finish?
Nov 17 05:31:47 .:buu:.	blahboybaz: this is true
Nov 17 05:31:53 .:buu:.	and react is also confusing
Nov 17 05:32:23 .:trafficjam:.	buu: yeah ill be reading from potentially multiple s3 files, but the result is returned via my api, is that fine?
Nov 17 05:33:02 .:blahboybaz:.	So I can see what you're saying - I can see the suefulness of knowing what each new input is into the field; but, what seems like a really legitimate need (to just obtain the completed input) eludes me. I don't know why it would be made so difficult to find information on. I guess if I had a name for what the goal is I would see information about how to do that all over the place though.
Nov 17 05:33:11 .:buu:.	trafficjam: so you want to 'await' your s3 reads
Nov 17 05:33:21 .:buu:.	oh
Nov 17 05:33:25 .:buu:.	that's not what you're asking
Nov 17 05:34:01 .:buu:.	trafficjam: my view is that making code 'async' is, generally speaking, an optimization, so.. keep everything as 'sync' as possible until you can't
Nov 17 05:34:07 .:buu:.	your life will be considerably simpler
Nov 17 05:35:02 .:buu:.	blahboybaz: I mean, instead of doing 'ADD': return [...state, etc]; just do '
Nov 17 05:35:17 .:buu:.	'ADD': return action.payload;
Nov 17 05:36:10 .:buu:.	blahboybaz: I mean, I'm not sure where you started or where you're going, but maybe just start over here: https://reactjs.org/docs/forms.html
Nov 17 05:36:48 .:buu:.	https://dmitripavlutin.com/controlled-inputs-using-react-hooks/
Nov 17 05:39:09 .:trafficjam:.	buu: yeah that's reasonable, async/await stuff can certainly get complicated, thanks man
Nov 17 05:39:27 .:blahboybaz:.	buu: Won't that just replace each subsequent entry with the new one? In other words I will never have an array with more than one object in it (just an object with a different value in its data field every time).
Nov 17 05:40:25 .:blahboybaz:.	buu: yeah I've done a lot of reading in those docs and other things and for some reason just feel like I'm spinning in circles
Nov 17 05:40:47 .:buu:.	blahboybaz: er, you want to store the previous values of the field?
Nov 17 05:40:52 .:buu:.	I thought you were objecting to that
Nov 17 05:41:46 .:blahboybaz:.	The ultimate gaol was to store an array of objects in/as state (using the useReducer hook) - where each object stored a string consisting of the complets/total input in its property.
Nov 17 05:42:23 .:blahboybaz:.	[{data: }, {}, {}]
Nov 17 05:42:27 .:blahboybaz:.	hang on
Nov 17 05:42:43 .:buu:.	Also day 42 of FUCKING PRISMA
Nov 17 05:42:58 .:blahboybaz:.	[{data: "my string"}, {data: "another"}, {data: "string"}]
Nov 17 05:43:16 .:buu:.	blahboybaz: does that mean you have 3 input fields?
Nov 17 05:43:41 .:blahboybaz:.	buu: no 1 input field executed 3 times
Nov 17 05:43:50 .:blahboybaz:.	in that example
Nov 17 05:44:02 .:buu:.	oh
Nov 17 05:44:20 .:blahboybaz:.	piling up a list of inputs (so to say)
Nov 17 05:44:29 .:buu:.	For the record that's kinda weird, but in that case instead of doing onChange do onSubmit or similar
Nov 17 05:44:54 .:blahboybaz:.	I realize there's probably a much better way to do this but I took it as a challenge to see if it could be done in state with the useReducer hook
Nov 17 05:45:19 .:buu:.	just trigger your ADD action onSubmit then?
Nov 17 05:45:47 .:blahboybaz:.	If I eliminate the onChange/handleChange and move my dispatch() to the onSubmit it fails
Nov 17 05:46:00 .:blahboybaz:.	using a temp variable makes no difference
Nov 17 05:46:26 .:blahboybaz:.	I'mna have to go to a dinner in a minute anyway
Nov 17 05:46:39 .:blahboybaz:.	just was seeing if I could get this sorted out before I left
Nov 17 05:49:51 .:buu:.	blahboybaz: 'fails' is a tad vague
Nov 17 05:50:08 .:buu:.	You probably need to get the value of the input more explicitly
Nov 17 06:21:56 .:trafficjam:.	buu: if I have a bunch of functions and I want to add shared additional functionality to each, what's the proper abstraction to do this?
Nov 17 06:22:26 .:trafficjam:.	e.g. say each function makes a request, and I want to write the response to a file (without interrupting the normal execution)
Nov 17 06:23:19 .:trafficjam:.	so instead of `foo()` returning a json object, the "new" version will first write the json object to a file, and then return it
Nov 17 06:23:51 .:trafficjam:.	should I create a class for this?
Nov 17 06:53:22 .:ThePendulum:.	trafficjam: just either create a function that takes the output from the request functions as the input, and then either do writeToFile(requestData()) or requestData({ writeToFile: true }) that calls that function internally?
Nov 17 06:59:18 .:jazzy:.	Question about some useEffect behavior I'm not understanding. I'm assigning to a variable using useSelector and tracking it with useEffect
Nov 17 06:59:41 .:jazzy:.	state is empty to start with, so the variable in question is initialized as undefined
Nov 17 07:00:22 .:jazzy:.	when a change to state is dispatched in the useEffect, however, the useEffect doesn't run again even though the useSelector variable has been updated
Nov 17 07:02:38 .:jazzy:.	here's the code snippet in question: https://bpa.st/MVVA
Nov 17 07:03:13 .:Rockwood:.	jazzy, is react question?
Nov 17 07:03:34 .:jazzy:.	yeah
Nov 17 08:03:11 .:KevinX:.	i dont see anything wrong with the code
Nov 17 08:03:25 .:KevinX:.	Put it online though if you want the 30 second fix
Nov 17 08:03:58 .:KevinX:.	jazzy ^
Nov 17 08:04:39 .:jazzy:.	KevinX, the code I had there was incomplete, this is the current stuff: https://bpa.st/4VWA
Nov 17 08:04:46 .:jazzy:.	(dispatch on line 41)
Nov 17 08:05:00 .:jazzy:.	but apparently the delete on line 11 was breaking things
Nov 17 08:05:03 .:jazzy:.	which I don't understand at all
Nov 17 08:06:00 .:KevinX:.	you can just filter numResults from items at the end
Nov 17 08:06:13 .:jazzy:.	yeah that's what I'll end up doing
Nov 17 08:06:31 .:jazzy:.	but why does that make it so useEffect doesn't detect the change?
Nov 17 08:07:02 .:KevinX:.	im not sure. Id have to see it and tweak it to try and understand the behavior
Nov 17 08:07:14 .:KevinX:.	could be delete + something else
Nov 17 08:07:37 .:jazzy:.	I see
Nov 17 08:09:40 .:KevinX:.	maybe has with how react does update comparison? If you're deleting a prop it might act weird
Nov 17 08:10:04 .:jazzy:.	Yeah maybe
Nov 17 08:10:21 .:jazzy:.	but I don't see hwo that'd work since useEffect is set to track the variable that I assigned to an integer
Nov 17 08:10:33 .:jazzy:.	should be independent from whatever I end up doing with the object
Nov 17 08:32:47 .:@ljharb:.	jazzy: never ever mutate when using react
Nov 17 08:33:02 .:@ljharb:.	don't do it regardless, but react's behavior is unpredictable if you do
Nov 17 08:33:39 .:jazzy:.	ljharb, I see
Nov 17 08:33:48 .:jazzy:.	this mentality would've saved me a great deal of trouble
Nov 17 08:34:03 .:jazzy:.	when you say that, though, do you mean not mutate *anything* or just stuff related to state
Nov 17 08:34:11 .:jazzy:.	and/or hooks
Nov 17 08:34:12 .:@ljharb:.	in general i mean anything
Nov 17 08:34:20 .:@ljharb:.	but especially anything related to props or state or hook values
Nov 17 08:34:22 .:jazzy:.	wow I see
Nov 17 08:34:32 .:jazzy:.	is that not a bit inefficient?
Nov 17 08:34:40 .:@ljharb:.	a) no, b) it doesn't matter
Nov 17 08:34:46 .:@ljharb:.	performance/efficiency are the least important things
Nov 17 08:34:52 .:jazzy:.	wow haha
Nov 17 08:34:55 .:@ljharb:.	worry about making your code clean, explicit, maintainable, etc
Nov 17 08:35:04 .:@ljharb:.	jazzy: lol we've been telling you this same stuff for years at this point
Nov 17 08:35:14 .:jazzy:.	I trust you since you're a longtime professional, but I thought that was a foremost concern at big companies
Nov 17 08:35:15 .:@ljharb:.	are you like the guy in memento?
Nov 17 08:35:27 .:jazzy:.	hahaha I guess I just have these innate instincts
Nov 17 08:35:31 .:jazzy:.	most of the coding I do is algorithmic
Nov 17 08:35:36 .:@ljharb:.	jazzy: big companies have to worry about it, but should do so *second* to writing clean, correct code
Nov 17 08:35:46 .:jazzy:.	really hard to break the habit
Nov 17 08:36:12 .:jazzy:.	I'm also slightly alarmed that you've recalled years back, I gotta be on my toes now
Nov 17 08:37:53 .:@ljharb:.	not just years back, i mean that's the advice in this channel pretty constantly :-)
Nov 17 08:38:22 .:jazzy:.	yeah I'll start taking up the habit out of shame alone haha
Nov 17 08:38:50 .:jazzy:.	will have to somehow decouple that from algorithm practice
Nov 17 08:39:37 .:KevinX:.	lol @ momento. love that movie
Nov 17 08:40:06 .:jazzy:.	was a good one
Nov 17 08:40:30 .:jazzy:.	prestige is one of my favs also
Nov 17 08:40:36 .:jazzy:.	nolan made good stuff
Nov 17 08:40:57 .:KevinX:.	havent seen that one
Nov 17 08:40:59 .:asteele:.	just watched the prestige a couple weeks ago, it held up well
Nov 17 08:41:02 .:jazzy:.	whaaaaaaaat
Nov 17 08:41:09 .:jazzy:.	KevinX, *The Prestige*?? haven't seen??
Nov 17 08:41:18 .:jazzy:.	put that on the list
Nov 17 08:41:26 .:KevinX:.	yeah just added it to the watchlist :)
Nov 17 08:41:46 .:jazzy:.	like top 2 all time movies for me
Nov 17 08:43:49 .:@ljharb:.	the prestige is *amazing*
Nov 17 08:43:54 .:@ljharb:.	highly underrated and eternally holds up
Nov 17 08:44:24 .:jazzy:.	so good
Nov 17 08:44:34 .:jazzy:.	and I hadn't thought about it, but it is strange no one seems to ever bring it up
Nov 17 08:44:55 .:jazzy:.	thought it was just a given everyone thought it was incredible
Nov 17 08:45:01 .:asteele:.	yeah i would agree its underrated, it never seems like it was that popular, but it is very good
Nov 17 08:45:31 .:asteele:.	almost 0 boringness to it, engaging the whole way through
Nov 17 08:45:37 .:asteele:.	and a killer ending like any great movie
Nov 17 08:45:53 .:jazzy:.	yeah don't spoil for KevinX though
Nov 17 08:46:00 .:asteele:.	yeah thats the limit of what ill say ;p
Nov 17 08:46:12 .:KevinX:.	thanks :)
Nov 17 08:46:20 .:jazzy:.	I guess I kind of like when things I love are generally underrated haha
Nov 17 08:46:27 .:jazzy:.	makes me feel like it's my little secret
Nov 17 08:47:00 .:jazzy:.	the inner hipster in me
Nov 17 09:28:02 .:KevinX:.	thats why you like javascript eh
Nov 17 09:39:00 .:jazzy:.	I consider javascript more an emotional abuser
Nov 17 09:39:32 .:jazzy:.	I need to get to know it a little better before I can like it
Nov 17 09:50:43 »»	Disconnected ().
**** ENDING LOGGING AT Thu Nov 17 09:50:43 2022

**** BEGIN LOGGING AT Thu Nov 17 09:54:09 2022

Nov 17 09:59:28 »»	Now talking on #javascript
Nov 17 09:59:28 »»	Topic for #javascript is: RIP GreenJello https://git.io/J2m1C | JavaScript is *not* Java | Just ask your question | Don't paste code in the channel | Can't talk? Get registered ( https://git.io/vaTS2 )
Nov 17 09:59:28 »»	Topic for #javascript set by theskillwithin!theskillwi@user/theskillwithin at Tue Aug  2 15:33:56 2022
Nov 17 10:03:04 .:blahboybaz:.	What are some ways to obtain only the final result of a text input field? Not each character getting combined as it is typed in but just whatever the final and complete input as a string? I'm drawing a blank
Nov 17 10:03:47 .:KevinX:.	debounce, onBlur, or form submit event
Nov 17 10:05:21 .:blahboybaz:.	KevinX: thanks I'll look at that
Nov 17 10:05:46 .:EdFletcher:.	the `change` event is effectively `onBlur` for text inputs https://jsfiddle.net/
Nov 17 10:06:03 .:EdFletcher:.	https://jsfiddle.net/5cuy7q6a/
Nov 17 10:06:23 .:EdFletcher:.	but even better: "When the element loses focus after its value was changed"
Nov 17 10:06:27 .:EdFletcher:.	https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event
Nov 17 10:08:34 .:KevinX:.	yeah that sounds better
Nov 17 10:08:42 .:KevinX:.	typically though you just let react handle it
Nov 17 10:13:21 .:jazzy:.	is this the right way to organize long nasty component declarations?
Nov 17 10:13:23 .:jazzy:.	https://i.snipboard.io/S43xH0.jpg
Nov 17 10:14:24 .:@ljharb:.	jazzy: why is it long
Nov 17 10:14:36 .:@ljharb:.	oh, elements
Nov 17 10:14:39 .:@ljharb:.	jazzy: yeah that's fine
Nov 17 10:14:54 .:@ljharb:.	jazzy: altho handlers (onClick) should never use the concise arrow form
Nov 17 10:14:54 .:jazzy:.	yeah guess wrong vocab there
Nov 17 10:15:03 .:jazzy:.	hm
Nov 17 10:15:06 .:jazzy:.	why's that
Nov 17 10:15:08 .:blahboybaz:.	KevinX: I'm not sure how react handles it. I was taking a basic approach just using native html elements and what's getting stored is the cumulation of each new character as it is added (rather than the final result).. Maybe I didn't choose the best way to implement what I'm doing. I was just screwing around trying to learn some new stuff and just cooking up ridiculous ideas to try. That being said
Nov 17 10:15:14 .:blahboybaz:.	I guess I'm stubborn. I kinda want to see if I can get this to work with what I have going on an put this bitch to rest forever.  The onBlur thing SEEMS the most straightforward approach to me. What, you just substitute onChance/handleChange with onBlur/handleBlur and then it fires when you click the button?
Nov 17 10:15:15 .:@ljharb:.	jazzy: because event handlers shouldn't return a value. so you want `() => { setPage(pageNum); }`
Nov 17 10:15:30 .:@ljharb:.	jazzy: also use String(x) instead of x.toString()
Nov 17 10:15:43 .:@ljharb:.	jazzy: also, since it's in a template literal, you don't need either.
Nov 17 10:15:59 .:jazzy:.	oh wow did not consider that
Nov 17 10:16:11 .:jazzy:.	this makes sense, didn't know js implicitly converted
Nov 17 10:16:31 .:blahboybaz:.	oh EdFletcher I didn't realize you were directing that at me. I'll have to take some time to go over that
Nov 17 10:16:34 .:blahboybaz:.	thanks
Nov 17 10:17:14 .:EdFletcher:.	blahboybaz: ah that would be partly my fault, i thought i highlighted you but clearly i did not. my bad!
Nov 17 10:17:43 .:trafficjam:.	does it make sense to use an api wrapper class in an aws lambda function?
Nov 17 10:18:08 .:KevinX:.	> what's getting stored is the cumulation of each new character as it is added --- whats wrong with this? blahboybaz
Nov 17 10:20:34 .:madprops:.	what's the easiest way to get an  obj from an array of objects, that has the lowest x int property?
Nov 17 10:22:07 .:blahboybaz:.	yeah.. while I've never actually been to hell.. I imagine it must be very much like dealing with form inputs
Nov 17 10:22:10 .:blahboybaz:.	:p
Nov 17 10:22:25 .:jazzy:.	madprops, prob reduce
Nov 17 10:22:32 .:blahboybaz:.	EdFletcher: you're awesome man!
Nov 17 10:22:40 .:stagas:.	madprops: slice sort and pop
Nov 17 10:23:34 .:jazzy:.	madprops, arr.reduce((acc, obj) => {if (obj.prop < acc.prop) return obj})
Nov 17 10:24:02 .:jazzy:.	uh
Nov 17 10:24:35 .:jazzy:.	madprops, arr.reduce((acc, obj) => obj.prop < acc.prop ? obj : acc)
Nov 17 10:25:15 .:blahboybaz:.	KevinX: Because the very goal itself is to store the final result as a string.. in an object.. in an array  eg: [{data: "my input"}] not like 8 objects each containing the cumulation leading up to the result.
Nov 17 10:25:40 .:trafficjam:.	anyone?
Nov 17 10:26:14 .:KevinX:.	no clue trafficjam
Nov 17 10:26:18 .:blahboybaz:.	[{data: "my input"}, {data: "my"}, {data: "other"}, {data: "input"}]
Nov 17 10:26:23 .:EdFletcher:.	blahboybaz: 😊🙇
Nov 17 10:26:26 .:trafficjam:.	thanks anyway kev
Nov 17 10:26:44 .:KevinX:.	blahboybaz yeah but you can use useState and let react control it, then get the value later when you need it
Nov 17 10:26:54 .:KevinX:.	look up controlled component (i think thats the name)
Nov 17 10:30:19 .:blahboybaz:.	KevinX: I know I know.. :)  This started as exercises to learn useReducer hook. I mad a couple other simple examples (one where it was an object in state). Then I got this bright idea I wanted to make useReducer manage an array of objects in state (bad idea it seems). I probalby could have thought up a lot easier way to do it than involving forms too. But no - my hard headed ass had to go this
Nov 17 10:30:25 .:blahboybaz:.	direction: https://codepen.io/blahboybaz/pen/gOKGxzQ?editors=0011
Nov 17 10:30:38 .:blahboybaz:.	mad\made
Nov 17 10:31:21 .:KevinX:.	i know you're just trying to learn but there are better things to learn than useReducer
Nov 17 10:31:45 .:blahboybaz:.	EdFletcher: Is that the puke emoji?
Nov 17 10:31:51 .:blahboybaz:.	lol
Nov 17 10:32:09 .:KevinX:.	like useState, useRef, useEffect - even useLayoutEffect I use way more than useReducer
Nov 17 10:33:20 .:blahboybaz:.	I'm seariously tempted to just delete that shit and move on but I don't think I could live with myself; if, after making this big of an investment, and coming this far, I just gave up.
Nov 17 10:33:47 .:KevinX:.	come back to it after you master the others and you'll be like.. oh.. yeah duh
Nov 17 10:33:49 .:blahboybaz:.	Its just now I'm not even dealing wtih useReducer learning anymore. Now I'm having to learn about form input
Nov 17 10:34:13 .:blahboybaz:.	for sure
Nov 17 10:34:48 .:KevinX:.	I use .reduce() on arrays often though.
Nov 17 10:34:53 .:blahboybaz:.	Call me a masochist but I've been feeling pulled toward learning forms
Nov 17 10:34:56 .:han-solo:.	> ([{ x: 5, y: 'foo' }, { x: 2, y: 'bar' }].sort((a, b) => a.x - b.x).values().next().value)
Nov 17 10:35:00 .:KevinX:.	Yeah but do forms the react way
Nov 17 10:35:01 .:han-solo:.	n> ([{ x: 5, y: 'foo' }, { x: 2, y: 'bar' }].sort((a, b) => a.x - b.x).values().next().value)
Nov 17 10:35:02 .:+jellobot:.	(okay) { x: 2, y: 'bar' }
Nov 17 10:35:33 .:EdFletcher:.	blahboybaz: haha classic emojis, always looking wrong to the other person! it was \😊 \:bowing: haha
Nov 17 10:35:34 .:blahboybaz:.	KevinX: What is the react way?
Nov 17 10:35:38 .:EdFletcher:.	oh ffs
Nov 17 10:35:38 .:blahboybaz:.	Forms?
Nov 17 10:35:41 .:EdFletcher:.	blushing
Nov 17 10:35:58 .:blahboybaz:.	EdFletcher: lol
Nov 17 10:36:00 .:blahboybaz:.	right on
Nov 17 10:36:57 .:EdFletcher:.	i'm an "Old" and just learned the other day that the youngsters apparently interpret 👍 in all sorts of contextual ways, some completely negative. i cannot keep up.
Nov 17 10:37:26 .:blahboybaz:.	I hear that
Nov 17 10:37:36 .:blahboybaz:.	This is not the world I grew up in
Nov 17 10:37:54 .:EdFletcher:.	INDEED
Nov 17 10:38:52 .:KevinX:.	the react way is using useState to let react control the inputs, and then handle the data on a form submit event
Nov 17 10:39:00 .:blahboybaz:.	I use a lot of phrases from the 60's and 70's. I just like them and the folks that raised me used them when I was young.
Nov 17 10:40:15 .:blahboybaz:.	KevinX: In that case (and considering that useReducer is just an overgrown useState) - learning about forms the react way should make what I'm trying to do now make perfect sense
Nov 17 10:40:19 .:blahboybaz:.	:p
Nov 17 10:41:39 .:KevinX:.	yeah but you're struggling. I'm offering you an out
Nov 17 10:41:52 .:KevinX:.	come back to it in 2 weeks. set an alarm
Nov 17 10:43:12 .:blahboybaz:.	KevinX: I know my friend. I appreciate that and that is exactly what I intend to do. Gonna put what I have in a named stash and just work on forms
Nov 17 10:43:25 .:blahboybaz:.	Didn't mean to joke when I shouldn't have (my earlier comment)
Nov 17 10:46:39 .:KevinX:.	i missed the joke
Nov 17 10:47:18 .:blahboybaz:.	I wish there was a way to tell you guys how much I appreciate you without it sounding too corny.. ljharb, theskillwithin, buu, EdFletcher, KevinX. I don't know what I'd do without you
Nov 17 10:47:50 .:blahboybaz:.	KevinX: Just a kind of sarcastic tone followed by  :p
Nov 17 10:48:20 .:blahboybaz:.	I was serious though. Lerning forms should make what I been struggling with now easy after that
Nov 17 10:48:26 .:KevinX:.	:P
Nov 17 10:51:02 .:KevinX:.	helping others helps solidify the information too, so I think most people are happy to help here if they can
Nov 17 10:52:58 .:blahboybaz:.	I think I prefer kindness in others. I try to be that way but sometimes fail miserably at it
Nov 17 10:56:39 .:trafficjam:.	anyone here used dynamodb?
Nov 17 11:02:56 .:sickdyd:.	hey guys what is "productivity porn" in a few words?
Nov 17 11:05:41 .:@ljharb:.	never heard that term before
Nov 17 11:07:59 .:ashnur:.	lol
Nov 17 11:08:15 .:ashnur:.	sickdyd, is it like perseverance porn?
Nov 17 11:15:52 .:ashnur:.	https://fair.org/home/medias-grim-addiction-to-perseverance-porn/
Nov 17 11:24:43 .:sickdyd:.	my CTO told me to beware of productivity porn
Nov 17 11:25:01 .:sickdyd:.	so basically is getting sorta obsessed in improving productivity by doing things that actually don't add much to the final result
Nov 17 11:25:39 .:sickdyd:.	we shortly discussed about it, and he had a point
Nov 17 11:26:05 .:sickdyd:.	if something can be worded as a problem that requires an improvement, then yes, it makes sense, otherwise why do it? the change has a cost
Nov 17 11:26:14 .:sickdyd:.	requires a fix *
Nov 17 11:26:34 .:sickdyd:.	this is for the development team processes
Nov 17 11:29:44 .:@ljharb:.	sickdyd: seems pretty work-inappropriate to use the term "porn" to describe it, especially when it's by no means a universally used term. but ok
Nov 17 11:38:21 .:hmw[at]:.	The suffix -porn has become common parlour. Food*, Cable*, Tech*
Nov 17 11:38:55 .:hmw[at]:.	Unix*
Nov 17 11:39:22 .:hmw[at]:.	Language. We bette watch it.
Nov 17 11:39:29 .:hmw[at]:.	*better
Nov 17 11:39:34 .:jazzy:.	nice
Nov 17 11:40:04 .:ashnur:.	yeah, agree with hmw, there is nothing work-inappropriate in the word porn if it's not actual porn
Nov 17 11:40:22 .:ashnur:.	would think before I use it though, some people take issue with it apparently :D
Nov 17 11:41:37 .:hmw[at]:.	I wouldnt't use or recommend its use it either
Nov 17 12:18:52 .:ashnur:.	some of the toxic stuff i heard about in the past 1.5 year is so much beyond something like this, i can't not compare the lack of focus on the worse stuff with the focus on language policing
Nov 17 12:29:26 .:Sircle:.	ljharb freebsd has no nvm support, no puppeteer support. I wonder
Nov 17 13:08:08 .:stagas:.	Sircle: why are you using freebsd?
Nov 17 13:08:28 .:Sircle:.	stagas its a better OS?
Nov 17 13:08:35 .:Sircle:.	stagas I like it
Nov 17 13:08:43 .:stagas:.	Sircle: what is better about it
Nov 17 13:08:55 .:Sircle:.	stagas uses less resources and does more , more stable but assume I am bias
Nov 17 13:09:15 .:Sircle:.	let's talk about nvm and puppeteer support for it
Nov 17 13:09:32 .:stagas:.	why is there no support for it
Nov 17 13:09:41 .:Sircle:.	ya, thats my question
Nov 17 13:10:30 .:stagas:.	i have no idea what is freebsd or what is different from an ubuntu for example
Nov 17 13:10:35 .:systemfault:.	FreeBSD was my first "Unix" love, at the time I found the linux system bloated and confusing. FreeBSD was so clean, respected the conventions... Ports were annoying though (I always hated compiling things) (That was 20 years ago)
Nov 17 13:10:40 .:Sircle:.	stagas thats great;
Nov 17 13:11:03 .:Sircle:.	systemfault you don't use it now?
Nov 17 13:11:35 .:systemfault:.	Sircle: No, pretty much moved to macs ever since I started working in webdev..
Nov 17 13:11:50 .:Sircle:.	how do you find linux, mac and fbsd
Nov 17 13:11:53 .:Sircle:.	compared
Nov 17 13:11:56 .:Sircle:.	as a dev
Nov 17 13:11:59 .:Sircle:.	and tech guy
Nov 17 13:14:11 .:systemfault:.	FBSD feels cleaner to me because the it's not just a kernel and a bunch some gnu utilities developed separately... I'm sure that there are alternatives to ports in 2022 but I haven't looked. Beside that, there's the obvious problem that while FBSD has something to run Linux binaries, it doesn't work all the time...
Nov 17 13:15:11 .:systemfault:.	Linux is great, always has the latest and greatest... it's much more popular than FBSD so more things are made to work with it. When I mean that linux is a mess, just install a clean system and start exploring what was installed.. and where.
Nov 17 13:16:07 .:systemfault:.	As for OSX... I get a decent unix-style terminal experience and I can easily run proprietary softwares that are sometimes need by my job and that aren't available on Linux and FBSD.
Nov 17 13:21:25 .:Artfaith:.	Marvelous day! ^^
Nov 17 13:23:44 .:Sircle:.	systemfault I see. I wish fbsd had more support for things
Nov 17 13:24:23 .:systemfault:.	Yeah... but some people don't need these things, so they use FBSD or OpenBSD or something else
Nov 17 13:27:43 »»	Disconnected ().
**** ENDING LOGGING AT Thu Nov 17 13:27:43 2022

**** BEGIN LOGGING AT Thu Nov 17 13:31:49 2022

Nov 17 13:37:09 »»	Now talking on #javascript
Nov 17 13:37:09 »»	Topic for #javascript is: RIP GreenJello https://git.io/J2m1C | JavaScript is *not* Java | Just ask your question | Don't paste code in the channel | Can't talk? Get registered ( https://git.io/vaTS2 )
Nov 17 13:37:09 »»	Topic for #javascript set by theskillwithin!theskillwi@user/theskillwithin at Tue Aug  2 15:33:56 2022
Nov 17 13:37:31 .:Sircle:.	I think bsd will be much stable, faster and consume less resources than linux
Nov 17 13:38:20 .:systemfault:.	Generally, I develop on the same platform as prod when possible (That's why docker can be a good thing)
Nov 17 13:43:49 .:Sircle:.	systemfault so i can run anything on fbsd inside docker?
Nov 17 13:44:22 .:systemfault:.	"containers" require OS support... and I seriously have no idea of what that support is like on FBSD
Nov 17 13:45:26 .:systemfault:.	Why don't you simply develop/deploy on Linux since vital parts of your applications only works on it?
Nov 17 13:46:05 .:Sircle:.	systemfault system stability, performance, etc concerns onl inux
Nov 17 13:47:09 .:GhostOfTheCoast:.	@Sircle , facebook marketplace... $50 will get you a machine good enough to do most dev tasks. $200 and have something made within the last five years.
Nov 17 13:48:52 .:Sircle:.	ya I already have heavy data processing machines
Nov 17 13:49:10 .:GhostOfTheCoast:.	@Sircle ---Thomas had never seen such b^%$*#^t.
Nov 17 13:49:37 .:Artfaith:.	Interesting...
Nov 17 13:50:21 .:GhostOfTheCoast:.	All good man, you do you.
Nov 17 13:51:15 .:Artfaith:.	Two scripts... both are inlcuded into webpack.min.js as mix.js('A','a').js('B','b') for example. Both have console.log(), yet only the second outputs, and the first is like ignored ,yet is compiled by webpack!
Nov 17 13:52:00 .:Artfaith:.	The first built file exists, but has no console.log in it. The second has.
Nov 17 13:52:21 .:Artfaith:.	Already wasted 5 or 6 hours finding the source of this nonsense.
Nov 17 13:59:59 .:GhostOfTheCoast:.	I am mostly a back end person. I have a "factory object", an object where each instance of new Slider is a set of frontend elements that are a slider that looks like the specifications I was given. The markup and styling and addeventlistener is good--
Nov 17 14:00:29 .:GhostOfTheCoast:.	Except when I try to call the object methods with the events.
Nov 17 14:01:03 .:GhostOfTheCoast:.	Clicking the things results in an error that the method/function is not defined.
Nov 17 14:01:33 .:GhostOfTheCoast:.	I don't necessarily need help with the code, I could use help with googling.
Nov 17 14:02:06 .:GhostOfTheCoast:.	My search "javascript object addeventlistener" seemed like the best bet-- no joy.
Nov 17 14:03:20 .:GhostOfTheCoast:.	...Probably this linux machine I am on that has stability, performance, etc. concerns.
Nov 17 14:04:27 .:systemfault:.	GhostOfTheCoast: Generally happens when you pass "methods" as callback... their `this` become unbound and you get something like `Cannot read whatever of undefined`
Nov 17 14:04:36 .:GhostOfTheCoast:.	Right!
Nov 17 14:04:59 .:GhostOfTheCoast:.	What should I be googling to learn this gap in my knowledge.
Nov 17 14:05:41 .:systemfault:.	GhostOfTheCoast: So, make sure that when you pass a method as a callback, bind it using the .bind function: example: setTimeout(myObject.method, 1000); will crash but setTimeout(myObject.method.bind(myObject), 1000) won't
Nov 17 14:06:09 .:systemfault:.	Just how "this" works in JS I guess..
Nov 17 14:06:30 .:GhostOfTheCoast:.	I will do a deep dive into bind.
Nov 17 14:08:02 .:systemfault:.	The TL;DR is... the `this` inside a function is whatever what at the left side of the . or ['methodName'] AT THE MOMENT ITS CALLED
Nov 17 14:09:34 .:GhostOfTheCoast:.	Thanks. Always happy to add a new thing to my bag of tricks.
Nov 17 14:11:49 .:systemfault:.	s/whatever what/whatever was (A bit sick... sorry)
Nov 17 14:12:04 .:Artfaith:.	Hey all
Nov 17 14:12:22 .:Artfaith:.	Oh. I was here already. Perhaps it's the sleep need. I am sorry ^^
Nov 17 14:12:36 .:Artfaith:.	Where may I ask a question regarding webpack?
Nov 17 14:12:51 .:Artfaith:.	I literally don't have a single idea...
Nov 17 14:14:22 .:Talon:.	when making custom elements, in the disconnectedCallback() is there a way to reference what element it was removed from?
Nov 17 14:17:33 .:GhostOfTheCoast:.	Artfaith: ...I would double check for syntax errors in my webpack config, especially if files to be crunched are specified individually and possibly not globbed. Then similarly check the syntax of the JS file. Those are the first two things I would do. Aaaaand doing that may not help anything.
Nov 17 14:18:26 .:GhostOfTheCoast:.	Still, the first thing I would do.
Nov 17 14:18:52 .:Artfaith:.	GhostOfTheCoast, no syntax errors
Nov 17 14:18:59 .:Artfaith:.	9-time checked
Nov 17 14:19:18 .:Artfaith:.	Literally copy-pasted both scripts, rules, and just changed the locations in webpack
Nov 17 14:19:44 .:Artfaith:.	In host: Two scripts... both are inlcuded into webpack.min.js as mix.js('A','a').js('B','b') for example. Both have console.log(), yet only the second outputs, and the first is like ignored, yet is compiled by webpack! Both built scripts exist in built and are included into the index page, but the second has console.log, and the first - does not.
Nov 17 14:19:51 .:Artfaith:.	It's like Laravel Mix or something removes the console.log from the file entirely before building!
Nov 17 14:20:42 .:GhostOfTheCoast:.	This looks really weird to me... mix.js('A','a').js('B','b')
Nov 17 14:20:58 .:GhostOfTheCoast:.	What or why...?
Nov 17 14:21:12 .:Artfaith:.	It's Laravel Mix
Nov 17 14:21:30 .:GhostOfTheCoast:.	...okay. I am unfamiliar with Laravel Mix.
Nov 17 14:24:35 .:Artfaith:.	It's a great addition to Webpack I believe but this issue...
Nov 17 15:39:30 .:derjanni:.	:)
Nov 17 16:55:39 .:ccapndave:.	Is it allowed to ask a Typescript question here?
Nov 17 17:38:36 .:theskillwithin:.	ccapndave yes
Nov 17 17:39:45 »»	ChanServ sets modes (#javascript +o litharge)
Nov 17 17:39:46 »»	litharge sets modes (#javascript -bo *!*@user/Intelo litharge)
Nov 17 17:45:44 .:ccapndave:.	I think the answer is no, but is there any way to write `const value = parseInt(element.getAttribute("data-value"))` in Typescript so that it typechecks without using either an extra reference or a helper function?
Nov 17 17:49:12 .:systemfault:.	ccapndave: Well... since getAttribute can return a string or null. There isn't much you can do: 1) Tell the compiler to shut up by using a non-null assertion 2) use ?? and a default ('0' ?)
Nov 17 17:49:25 .:systemfault:.	1) const value = parseInt(element.getAttribute("data-value")!)
Nov 17 17:49:34 .:systemfault:.	2) const value = parseInt(element.getAttribute("data-value") ?? '0')
Nov 17 17:49:43 .:ccapndave:.	What's the exclamation mark about?
Nov 17 17:50:06 .:systemfault:.	It tells the compiler, "trust me, the value is not null or undefined"
Nov 17 17:50:09 .:ccapndave:.	Oh!  I didn't know about that (just FTFM)
Nov 17 17:50:28 .:ccapndave:.	However, the value can be `null`
Nov 17 17:50:35 .:ccapndave:.	So I guess a helper function is it
Nov 17 17:50:45 .:deltab:.	btw you can use  element.dataset.value
Nov 17 17:52:17 .:ccapndave:.	deltab: I don't know about this either
Nov 17 17:52:44 .:ccapndave:.	Shut the front door!
Nov 17 17:52:55 .:deltab:.	all data-* attributes are reflected in element.dataset
Nov 17 17:53:33 .:ccapndave:.	I did not know that
Nov 17 17:53:37 .:ccapndave:.	Thanks!
Nov 17 17:53:48 .:deltab:.	you're welcome
Nov 17 17:53:54 .:ccapndave:.	I've been `getAttribute("data-`ing all this time
Nov 17 18:35:13 .:Buoy172:.	hhi
Nov 17 18:35:25 .:Buoy172:.	What would you recommend for a rich-text editor?
Nov 17 18:36:21 .:Buoy172:.	Should a use one or make one from scratch?
Nov 17 18:38:20 .:ThePendulum:.	there's quill.js
Nov 17 18:38:46 .:ThePendulum:.	a rich text editor is probably the last thing I'd try and make from scratch, lol
Nov 17 18:41:19 .:Sircle:.	I am on freebsd and it does not supports puppeteer. What are my choices now?
Nov 17 18:41:31 .:ThePendulum:.	linux
Nov 17 18:41:37 .:Sircle:.	any other?
Nov 17 18:42:02 .:ThePendulum:.	selenium doesn't seem to be well supported either
Nov 17 18:42:27 .:Sircle:.	docker?
Nov 17 18:42:51 .:ThePendulum:.	does docker generally work well for linux applications on freebsd?
Nov 17 18:43:06 »»	Sircle has no idea
Nov 17 18:43:28 .:ThePendulum:.	and that would essentially be my "linux" answer then :P a bsd docker probably wouldn't help much
Nov 17 18:43:46 .:ThePendulum:.	playwright, cypress, none of them seem to have freebsd support
Nov 17 18:43:56 .:ThePendulum:.	you could try all of them and see which one is the least broken
Nov 17 18:44:38 .:Sircle:.	my app is already made in puppeteer
Nov 17 18:44:42 .:Sircle:.	I wonder why they don't support fbsd
Nov 17 18:48:18 .:ThePendulum:.	probably the ratio between popularity and available resources
Nov 17 18:50:50 .:johnny:.	just like why they didn't used to support linux in a lot of places they do now :)
Nov 17 19:00:25 .:@ljharb:.	Sircle: does node even have FreeBSD support?
Nov 17 19:01:27 .:@ljharb:.	Sircle: also why would nvm need to “support” puppeteer? nvm only manages node.
Nov 17 19:01:28 .:cstml:.	Hello!
Nov 17 19:15:11 .:Buoy172:.	Does anyone have an opinion on Facebook's Lexical? https://lexical.dev/
Nov 17 19:15:29 .:Buoy172:.	For a rich-text editor
Nov 17 19:30:14 »»	Disconnected ().
**** ENDING LOGGING AT Thu Nov 17 19:30:14 2022

**** BEGIN LOGGING AT Thu Nov 17 19:34:20 2022

Nov 17 19:39:39 »»	Now talking on #javascript
Nov 17 19:39:39 »»	Topic for #javascript is: RIP GreenJello https://git.io/J2m1C | JavaScript is *not* Java | Just ask your question | Don't paste code in the channel | Can't talk? Get registered ( https://git.io/vaTS2 )
Nov 17 19:39:39 »»	Topic for #javascript set by theskillwithin!theskillwi@user/theskillwithin at Tue Aug  2 15:33:56 2022
Nov 17 19:40:22 .:Sircle:.	ljharb my question about nvm and puppeteer are separate questions. I can forget nvm but puppeteer is critical for me . I see you were participant in this discussion https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=5034  and I am not the first/only one raising this
Nov 17 19:40:49 .:@ljharb:.	ok but how is it a better os if a bunch of stuff doesn’t work in it
Nov 17 19:41:22 .:@ljharb:.	and no i don’t see any comments from me in that discussion
Nov 17 19:42:08 .:blueagain:.	that is an old.... bug
Nov 17 19:43:01 .:Sircle:.	ljharb consider I am bias (for sake of argument). Secondly, few things not working on an OS cannot quantify all other things working great on the OS. That's not the topic though.
Nov 17 19:43:34 .:@ljharb:.	lol then i guess puppeteer isn’t critical for you
Nov 17 19:43:59 .:@ljharb:.	because “critical” outranks “bias”
Nov 17 19:46:26 .:Sircle:.	ljharb yes the link does not have you. Second: "Bias" was for OS assumption for you for sake of discussion. "Critical" is for getting it working as of time.
Nov 17 19:46:49 .:Sircle:.	ljharb should we move to the topic on how to get puppeteer working on freebsd?
Nov 17 19:54:10 .:johnny:.	Sircle, i think if you want help with that, you won't find it here
Nov 17 19:55:56 .:Sircle:.	johnny somehow I believe you
Nov 17 19:56:04 .:Sircle:.	johnny which place you suggest?
Nov 17 19:56:24 .:austincheney:.	it does not look like there is a binary on the nodejs.org site for freebsd but that freebsd is a supported platform in the docs.  Does that mean to get node running on freebsd you must build from source?
Nov 17 19:57:13 .:johnny:.	Sircle, i don't use bsd, so i couldn't tell you
Nov 17 19:57:49 .:Sircle:.	ya, thats the issue here. Bsd guys say "ask node guys" and node guys say "ask bsd guys". Nothing on you; just sharing
Nov 17 19:58:17 .:johnny:.	you need to mabye ask freebsd people who care about node i guess
Nov 17 19:58:21 .:Sircle:.	austincheney bsd's pkg manager has node and npm. no need to build
Nov 17 19:58:29 .:austincheney:.	awesome
Nov 17 19:58:31 .:Sircle:.	johnny hard to find :)
Nov 17 19:58:39 .:Sircle:.	austincheney do yo use/plan to use bsd?
Nov 17 19:58:43 .:johnny:.	then you get to be that person
Nov 17 20:00:29 .:Sircle:.	ya :)
**** ENDING LOGGING AT Thu Nov 17 19:59:54 2022


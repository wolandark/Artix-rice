T 1668515834 25»19»	19Now talking on #bash
T 1668515834 29»22»	22Topic for #bash is: http://mywiki.wooledge.org/BashFAQ | http://mywiki.wooledge.org/BashGuide | http://gnu.org/s/bash/manual | https://wiki.bash-hackers.org/ | http://mywiki.wooledge.org/Quotes | http://www.shellcheck.net/ | https://lists.gnu.org/mailman/listinfo/help-bash | https://git.savannah.gnu.org/cgit/bash.git?h=devel
T 1668515834 29»22»	22Topic for #bash set by twkm at Fri May 21 00:17:30 2021
T 1668515543 28>alis28<	LIST i3wm
T 1668515859 28-21Notice28-	21{28from alis21} Returning maximum of 64 channel names matching '*i3wm*'
T 1668515859 28-21Notice28-	21{28from alis21} End of output.
T 1668515547 28>alis28<	LIST i3
T 1668515864 28-21Notice28-	21{28from alis21} Returning maximum of 64 channel names matching '*i3*'
T 1668515864 28-21Notice28-	21{28from alis21} #fedora-i3                                         39 :welcome app (Meeting topic: i3-sig) 
T 1668515864 28-21Notice28-	21{28from alis21} #i3                                                45 :freenode/#i3 is moving to OFTC: https://oftc.net/ -- https://www.freelists.org/post/i3-announce/i3-IRC-channel-moving-from-Freenode-to-OFTC -- see you there 
T 1668515864 28-21Notice28-	21{28from alis21} #i3Detroit                                         10 :Michigan's coolest hackerspace/makerspace since 2009, https://www.i3detroit.org/ | Semi-official; most member chat is on our Slack. | 🔨📡🔬☎🎨📏🎥💾🔧 | See the events calendar on i3detroit.org! |  welcome back my friends to the show that never ends, we're so glad you could attend, come inside come inside 
T 1668515864 28-21Notice28-	21{28from alis21} End of output.
T 1668515969 28.:192427Soliton28:.	i can maybe imagine those numbers to be completely unconnected. (sounds terrible for debugging) but connected with +1 just makes no sense to me.
T 1668517883 28.:192419uniqdom28:.	I mistakenly run this command "nano .bashrc | grep emacs". How do I interrupt its execution?. CTRL+C and CTRL+Z doesn't work.
T 1668517941 28.:192422tirnanog28:.	exit nano in the samy way that you would normally. if that doesn't work, identify its process id elsewhere and kill it.
T 1668517947 28.:192422tirnanog28:.	same
T 1668517979 28.:192419uniqdom28:.	tirnanog, exiting nano worked. ;)
T 1668517984 28.:192419uniqdom28:.	thanks
T 1668520078 28.:192419Artfaith28:.	Marvelous day! ^^
T 1668520207 28.:192419Artfaith28:.	Wooledge: "Never use `getopt`... Please forget that it ever existed..."
T 1668520356 28.:192419Artfaith28:.	Yeah... you'd say "getopts"!
T 1668520400 28.:192419Artfaith28:.	And you'd say "yet another ooption parser" which count at least at over9999+ out there
T 1668520496 28.:192419Artfaith28:.	Though... I still share my version of an option parser this week or slightly later. I still requires a quite of refactoring and lack of features I will eventually apply, but it's already a base I coded back in the days and had no issues with while using, so... someone might like it, too ^^
T 1668520548 28.:192427Earnestly28:.	Produce code that allows the total amount of code in the wild to decrease
T 1668520555 28.:192419Artfaith28:.	Also, knowing local Pros, someone might suggest anything to enhance the code in general. I would very glad to hear any suggestions! ^^
T 1668520572 28.:192419Artfaith28:.	be very*
T 1668520605 28.:192419Artfaith28:.	It's in a shape of library, so just source and good to go
T 1668520695 28.:192419Artfaith28:.	I will still share*
T 1668520706 28.:192419Artfaith28:.	It still requires*
T 1668596296 25»19»	19Now talking on #bash
T 1668596296 29»22»	22Topic for #bash is: http://mywiki.wooledge.org/BashFAQ | http://mywiki.wooledge.org/BashGuide | http://gnu.org/s/bash/manual | https://wiki.bash-hackers.org/ | http://mywiki.wooledge.org/Quotes | http://www.shellcheck.net/ | https://lists.gnu.org/mailman/listinfo/help-bash | https://git.savannah.gnu.org/cgit/bash.git?h=devel
T 1668596296 29»22»	22Topic for #bash set by twkm at Fri May 21 00:17:30 2021
T 1668596067 19.:2823woland19:.	Hi, scripting newbie here. I was trying to write a very simple script to search the AUR using the lynx browser. The script works and opens the lynx browser but then quickly closes itself. 
T 1668596075 19.:2823woland19:.	here is what I have http://0x0.st/oIew.sh
T 1668596409 28.:192429djph28:.	!check
T 1668596410 04<checkbot04>04	woland: Line 9: This & terminates the command. Escape it or add space after & to silence. Line 6: read without -r will mangle backslashes. Line 9: K appears unused. Verify use (or export if used externally). See https://shellcheck.net/?id=cb96410
T 1668596155 19.:2823woland19:.	what is this
T 1668596637 28.:192429djph28:.	what is what?
T 1668596645 28.:192429djph28:.	shellcheck?
T 1668596639 19.:2823woland19:.	ah, the & terminates the command? 
T 1668596645 19.:2823woland19:.	O.o
T 1668596684 19.:2823woland19:.	what the hell that solved it!
T 1668597056 28.:192429sixwheeledbeast28:.	why use read at all?
T 1668597133 28.:192429sixwheeledbeast28:.	pass your search string as an argument?
T 1668596934 19.:2823woland19:.	i wanted it to be interactive-ish 
T 1668596952 19.:2823woland19:.	and then expand it with some arguments and if conditions to search other places too
T 1668597519 28.:192429sixwheeledbeast28:.	!echo
T 1668597519 28.:192429greybot28:.	echo outputs a string. echo has many portability problems, and should never be used with option flags. Consider printf instead: printf 'name: %s\n' "$name". http://wiki.bash-hackers.org/commands/builtin/echo | http://cfajohnson.com/shell/cus-faq.html#Q0b | http://www.in-ulm.de/~mascheck/various/echo+printf
T 1668597546 19.:2823woland19:.	I changed it to printf
T 1668598277 28.:192428emanuele628:.	that is most likely an unnecessary space.
T 1668598288 28.:192428emanuele628:.	oops, i was scrolled up a lot
T 1668598351 28.:192427Guest1128:.	i need some help with scripting
T 1668598366 28.:192428emanuele628:.	(it was wrt using  $(printf '%s ' "-S "foo-{1..30}) instead of just -Sfoo-{1..30})
T 1668598445 28.:192427Guest1128:.	https://github.com/thanasxda/basic-linux-setup/blob/965db45f204f6468b1d9cedac3eabbcc8d0f1f90/init.sh#L1304
T 1668598448 28.:192428checkbot28:.	Guest11: I think the problem is on line 941. Remove spaces around = to assign (or use [ ] to compare, or quote '=' if literal). See 546 issues on https://shellcheck.net/?id=cb98447
T 1668598455 28.:192427Guest1128:.	heres the part i need help with this works for console not in script
T 1668598709 28.:192424geirha28:.	use arrays instead of var$num
T 1668598834 04<Earnestly04>04	woland: Something to ponder: https://0x0.st/oI28.sh
T 1668598877 28.:192427Earnestly28:.	> 546 issues
T 1668598945 28.:192427Guest1128:.	thanks geirha
T 1668599005 28.:192424geirha28:.	that'll be a pain to maintain
T 1668599055 28.:192427Earnestly28:.	Imagine having to add every iface
T 1668599084 28.:192427Earnestly28:.	Instead of just programmatically determining it, or defining it to be something specific
T 1668599110 28.:192427Guest1128:.	i guess i can grep or awk it from ifconfig
T 1668599130 28.:192427Guest1128:.	but i didnt cause interfaces sometimes have weird names depending on device
T 1668599147 28.:192424geirha28:.	if [ "$(awk '/MemTotal/ { print $2 }' /proc/meminfo | cut -c1-1)" -ge 32 ]    interesting how you epxect a single digit to be greater than 32
T 1668599169 28.:192427Guest1128:.	ah thanks for pointing out, yes still contains lots of mistakes
T 1668599181 28.:192427Guest1128:.	check if u find more cause i overlook much stuff since stil working on it
T 1668599254 28.:192427Guest1128:.	or any suggested improvements are welcome
T 1668599572 28.:192427Soliton28:.	could start with the 546 issues shellcheck found.
T 1668599623 28.:192427Guest1128:.	those are values for sysctl.conf that dont apply in the script for convenience it just replicates as sysctl as well
T 1668599817 28.:192427Soliton28:.	there are hundreds more issues.
T 1668599838 28.:192427Soliton28:.	no idea what you mean with they don't apply anyway.
T 1668599852 28.:192427Soliton28:.	it's in the middle of the script.
T 1668599859 28.:192427Guest1128:.	the thing is many things that work for linux are problematic on openwrt
T 1668599903 28.:192427Guest1128:.	so you suggest checking shellcheck and improving all the script related stuff as well
T 1668599930 28.:192427Soliton28:.	getting basic quoting right will certainly get you a long way.
T 1668599939 28.:192427Guest1128:.	ok thanks man
T 1668600139 19.:2823woland19:.	Earnestly: thanks. Im gonna have to search every line of it to learn lol
T 1668606059 28.:192422CrtxReavr28:.	lockywolf, that's probably a good mnemonic.  Thanks.
T 1668607052 28.:192419ozzzo_work28:.	What am I doing wrong here? https://paste.centos.org/view/b1723ae6
T 1668607066 28.:192419ozzzo_work28:.	$i and $j aren't getting set
T 1668607102 28.:192427Earnestly28:.	!check
T 1668607103 28.:192428checkbot28:.	Earnestly: Unable to read that :/
T 1668607112 28.:192427Earnestly28:.	!check https://paste.centos.org/view/raw/b1723ae6
T 1668607113 28.:192428checkbot28:.	Earnestly: Line 8: Use $(...) notation instead of legacy backticks `...`. Line 54: Use $(...) notation instead of legacy backticks `...`. Line 46: Double quote to prevent globbing and word splitting. See https://shellcheck.net/?id=cb7113 for all 16 issues.
T 1668607129 28.:192422kawza28:.	ozzzo_work: please post the  /view/raw/ link next time
T 1668607161 28.:192419han-solo28:.	!check https://paste.centos.org/view/raw/b1723ae6
T 1668607162 28.:192428checkbot28:.	han-solo: Line 8: Use $(...) notation instead of legacy backticks `...`. Line 54: Use $(...) notation instead of legacy backticks `...`. Line 46: Double quote to prevent globbing and word splitting. See https://shellcheck.net/?id=cb7161 for all 16 issues.
T 1668607167 28.:192419han-solo28:.	oh, whoops
T 1668607172 28.:192420Swahili28:.	Q: I've got a program that takes an arg e.g. dotenv -e .env.development my-other-program some-args; I'd like to control the -e argument by passing an arg but if none is provide default to something. My attemp was dotenv -e \".env.${1:-\"development\"}\"
T 1668607181 28.:192420Swahili28:.	which is not successful, does anyone know how to do that?
T 1668607207 28.:192428llua28:.	heh
T 1668607263 28.:192428llua28:.	that script is pretty janky
T 1668607266 28.:192427Earnestly28:.	ozzzo_work: Are you expecting parallel(1) to set variables in the current shell?
T 1668607279 28.:192428llua28:.	seemingly yes
T 1668607290 28.:192419ozzzo_work28:.	I don't really know how parallel works.
T 1668607296 28.:192419ozzzo_work28:.	I'm trying it for the 1st time
T 1668607301 28.:192427Earnestly28:.	ozzzo_work: If you consider use of del_rule as sh -c 'del_rule', does it make sense that any variable assigned in that shell will not affect the current context?
T 1668607301 28.:192419ozzzo_work28:.	what do I need to do w/the vars?
T 1668607322 28.:192422kawza28:.	ozzzo_work: the lines 34 and below are commented out.  everywhere else in the script i and j are untouched
T 1668607329 28.:192419ozzzo_work28:.	do I need to export them in del_rule?
T 1668607332 28.:192427Earnestly28:.	# a=1; sh -c 'a=42'; declare -p a # does this make sense to you?
T 1668607334 28.:192425shbot28:.	Earnestly: declare -- a="1"
T 1668607342 28.:192427Earnestly28:.	ozzzo_work: No, you can't do what you're intending
T 1668607396 28.:192427Earnestly28:.	The only way to extract j/i would be to use some form of IPC, whether that's printing to stdout, files, sockets, fifos, whatever.  With all the massive headaches that generates
T 1668607442 28.:192427Earnestly28:.	You could write for example a . to a file for every successful deletion and then use wc -c to extract the total but you'll have to think about this
T 1668607446 28.:192422tirnanog28:.	Swahili: the backslashes there are a curious thing to behold. is this to be genuinely executed by a shell, directly?
T 1668607449 28.:192427Earnestly28:.	!wait-n
T 1668607450 28.:192429greybot28:.	Run up to 5 processes in parallel (bash 4.3): i=0 j=5; for elem in "${array[@]}"; do (( i++ < j )) || wait -n; my_job "$elem" & done; wait
T 1668607467 28.:192427Earnestly28:.	Perhaps even keeping it all within the shell can help if you want to preserve access to the current shell context
T 1668607484 28.:192420Swahili28:.	tirnanog: thanks for looking, should've thought about that and simplified. Calling from a nodejs package.json file
T 1668607540 28.:192427Earnestly28:.	ozzzo_work: (It's also hard to advise much since almost everything in this code is wrong/unnecessary, such as use of date +%s and bc -l for subtraction.  E.g. printf -v start '%(%s)T' -1; ... then runtime=$((end - start))
T 1668607571 28.:192427Earnestly28:.	Using a for loop over `` relying on wordsplitting
T 1668607588 28.:192427Earnestly28:.	Basically using no quoting anywhere, which invokes wordsplitting and file glob expansion
T 1668607611 28.:192427Earnestly28:.	Why i and j both increment but only j appears to be used
T 1668607661 28.:192427Earnestly28:.	(i is never reset, so they both do the same thing)
T 1668607705 28.:192422tirnanog28:.	Swahili: all I can say is that it's appropriate shell code in the case that the backslashes are remoed.
T 1668607720 28.:192419ozzzo_work28:.	I set I to 0 on line 33
T 1668607798 28.:192419ozzzo_work28:.	What's the better alternative to using a for loop with backticks?
T 1668607869 28.:192420Swahili28:.	tirnanog: thank you!
T 1668607876 28.:192424geirha28:.	depends what you're iterating
T 1668607878 28.:192419kurahaupo_28:.	ozzzo_work: while read…
T 1668607893 28.:192419kurahaupo_28:.	!for`
T 1668607893 28.:192429greybot28:.	Never do this: for x in $(command) or `command` or $var. for-in is used for iterating arguments, not (output) strings. Instead, use a glob (eg. *.txt), arrays (eg. "${names[@]}") or a while-read loop (eg. while read -r line). See http://mywiki.wooledge.org/BashPitfalls#pf1 and http://mywiki.wooledge.org/DontReadLinesWithFor
T 1668607907 28.:192422tirnanog28:.	Swahili: if that's not enough, you would need to elaborate on what appears to be wrong, while taking into account this additional layer of parsing/quoting that you apparently have.
T 1668607912 28.:192427Earnestly28:.	ozzzo_work: I'll do a basic rewrite
T 1668607988 28.:192419kurahaupo_28:.	ozzzo_work: The problem with your original paste is that "parallel" runs an entirely separate process, so any changes to its variables are not visible to your main script.
T 1668608058 28.:192419ozzzo_work28:.	ok reading ty
T 1668608068 28.:192419kurahaupo_28:.	ozzzo_work: Also PLEASE forget that you ever heard about backticks, and use $(…) instead
T 1668608216 28.:192428llua28:.	and aliases
T 1668608804 28.:192427Earnestly28:.	ozzzo_work: Something like: https://0x0.st/oI_A.sh
T 1668608809 28.:192427Earnestly28:.	iiuic
T 1668608844 28.:192419ozzzo_work28:.	ok I'll try that, ty!
T 1668608863 28.:192427Earnestly28:.	ozzzo_work: Don't try it
T 1668608891 28.:192427Earnestly28:.	ozzzo_work: It's for you to read and understand, to incorporate it into whatever else you've got going
T 1668609001 28.:192419ozzzo_work28:.	!mapfile
T 1668609001 28.:192429greybot28:.	Read lines from a file/stream into an array: mapfile -t arrayname < file OR mapfile -t arrayname < <(some cmd); # In bash < 4, use a loop; see FAQ 5 or http://wiki.bash-hackers.org/commands/builtin/mapfile
T 1668609004 28.:192427Earnestly28:.	And hopefully reference the manual for the bits which are new to you
T 1668609009 28.:192427Earnestly28:.	(Don't google)
T 1668609065 28.:192426Cyclohexane28:.	How do I prefix every array element with a string? https://rextester.com/CUFOS29670 it's only doing the first element
T 1668609097 28.:192427Earnestly28:.	ozzzo_work: Also I shouldn't use else in the parallel array, it should just end with fi and del_rule outside of the if statement
T 1668609135 28.:192427Earnestly28:.	Cyclohexane: for loop, which you can do by avoiding the read
T 1668609143 28.:192419ozzzo_work28:.	ok ty Earnestly
T 1668609179 28.:192427Earnestly28:.	You're using implicit splitting over ' ', which is not a good idea for options, but if you did use a for loop over it you'll have to disable file glob expansion with set -f
T 1668609181 28.:192420osse28:.	# values=(a b c d); echo "${values[@]/#/--arg=}"
T 1668609183 28.:192425shbot28:.	osse: --arg=a --arg=b --arg=c --arg=d
T 1668609200 28.:192427Earnestly28:.	osse: The problem is of course the space
T 1668609228 28.:192426Cyclohexane28:.	the export line is coming from another file - source vars.sh
T 1668609231 28.:192420osse28:.	ah
T 1668609236 28.:192427Earnestly28:.	ozzzo_work: And use shellcheck
T 1668609256 28.:192427Earnestly28:.	Cyclohexane: Yeah it's pretty nasty, but if that's what you've got to work with, there's not much you can do
T 1668609315 28.:192427Earnestly28:.	Cyclohexane: I.e. set +f; IFS=' '; for opt in $IONCUDE...OPTS; do opts+=(--copy "$opt"); done; set -f; unset IFS
T 1668609319 28.:192427Earnestly28:.	It's pretty ugly
T 1668609345 28.:192428emanuele628:.	set -f
T 1668609357 28.:192427Soliton28:.	less ugly with read.
T 1668609369 28.:192427Earnestly28:.	Soliton: Still need a for loop
T 1668609390 28.:192427Soliton28:.	for the add --copy, sure.
T 1668609399 28.:192427Soliton28:.	unless --copy= works.
T 1668609404 28.:192427Earnestly28:.	Hopefully
T 1668609421 28.:192427Earnestly28:.	Maybe this vars.sh can store it as an array in the first place
T 1668609441 28.:192426Cyclohexane28:.	I basically want to export a list which can be used in multiple scripts, and conditionally prefix the list
T 1668609443 28.:192427Soliton28:.	that'd be much nicer.
T 1668609453 28.:192427Soliton28:.	you can't export a list.
T 1668609466 28.:192427Soliton28:.	where does export come in anyway?
T 1668609473 28.:192427Soliton28:.	you said you source a file.
T 1668609487 28.:192426Cyclohexane28:.	yeah I source the var file
T 1668609497 28.:192426Cyclohexane28:.	export isn't necessary?
T 1668609498 28.:192427Soliton28:.	so no export involved?
T 1668609506 28.:192427Soliton28:.	necessary for what?
T 1668609521 28.:192427Earnestly28:.	Cyclohexane: The problem with --copy vs. --copy= is that in one case you're doing ["foo"] => ["--copy=foo"] while in the other you're trying to do ["--copy", "foo"]
T 1668609530 28.:192426Cyclohexane28:.	I figured I need to export the var for the source to work, but I guess not
T 1668609536 28.:192427Earnestly28:.	Indeed no
T 1668609539 28.:192427Earnestly28:.	!.
T 1668609542 28.:192427Earnestly28:.	!source
T 1668609543 28.:192429greybot28:.	''. scriptname'' (or ''source scriptname'', which is not portable) reads and executes the commands from scriptname in the current shell, as opposed to a separate instance of the shell. If scriptname does not contain a slash (/), it will be searched for in $PATH.
T 1668609549 28.:192427Soliton28:.	no, you export for child processes to get the env variable.
T 1668609576 28.:192427Soliton28:.	does vars.sh need to be sh compatible?
T 1668609577 28.:192426Cyclohexane28:.	can I pass arguments to source?
T 1668609580 28.:192427Soliton28:.	yes.
T 1668609602 28.:192426Cyclohexane28:.	doesn't need to be sh compatible no
T 1668609602 28.:192427Soliton28:.	if you just source from bash then make the list a proper array.
T 1668609606 28.:192426Cyclohexane28:.	ill have a play
T 1668609609 28.:192426Cyclohexane28:.	ta
T 1668609693 28.:192427Soliton28:.	then you can either do "${list[@]/#/--copy=}" or a loop with --copy as Earnestly showed.
T 1668609757 28.:192419itt78828:.	'for i in 1 2 3; do ls ${i}_*; done' works supposing forders/files starting with 1_, 2_, or 3_ exist
T 1668609777 28.:192427Soliton28:.	ls "$i"_*
T 1668609804 29»22»22	27Earnestly .oO(ls [123]_*)
T 1668609881 28.:192419itt78828:.	but 'for i in 1 2 3; do mkdir $"i"_*/newrep; done' does not
T 1668609901 28.:192427Soliton28:.	nothing matches naturally.
T 1668609912 28.:192427Soliton28:.	can't glob something you want to create.
T 1668609935 28.:192419kurahaupo_28:.	for i in [123]_* ; do mkdir "$i/newrep"; done
T 1668609935 28.:192427Earnestly28:.	itt788: for i in [123]_*; do mkdir -- "$i"/newrep; done
T 1668609940 28.:192427Earnestly28:.	heh
T 1668609959 28.:192419kurahaupo_28:.	or rather
T 1668609965 28.:192427Soliton28:.	needs trailing /
T 1668609970 28.:192419kurahaupo_28:.	for i in [123]_*/ ; do mkdir "$i"newrep ; done
T 1668609972 28.:192427Earnestly28:.	True
T 1668610007 28.:192419kurahaupo_28:.	also mkdir -p to avoid complaining about existing directories
T 1668610008 28.:192427Earnestly28:.	(Sometimes I cheekily rely on mkdir/tools to fail)
T 1668610026 28.:192427Earnestly28:.	Why do the work twice eh?
T 1668610048 28.:192427Soliton28:.	dirs=([123]_*/); mkdir "${dirs[@]/%/newrep}"
T 1668610073 28.:192427Earnestly28:.	Splendid
T 1668610084 29»22»22	27Earnestly ARG_MAX enters the game
T 1668610095 28.:192419kurahaupo_28:.	A=( [123/]_*/ ) ; mkdir -pv "${A[@/%/newrep}"
T 1668610112 28.:192419kurahaupo_28:.	Soliton: gah, you type faster than me
T 1668610170 28.:192427Earnestly28:.	find . -type d -name '[123]_*' -exec sh -c 'mkdir -- "$@"' _ {} +
T 1668610204 28.:192419kurahaupo_28:.	printf %snewrep\\0 [123/]_*/ | xargs -r0 mkdir -pv
T 1668610236 28.:192419kurahaupo_28:.	Earnestly: newrep subdir?
T 1668610236 28.:192427Earnestly28:.	kurahaupo_: Why the / after 3 in both examples?
T 1668610249 28.:192427Earnestly28:.	kurahaupo_: Sorry yeah the sh -c should have added that
T 1668610253 28.:192419kurahaupo_28:.	typo
T 1668610261 28.:192419kurahaupo_28:.	printf %snewrep\\0 [123]_*/ | xargs -r0 mkdir -pv
T 1668610279 28.:192427Earnestly28:.	Actually that cannot work then with find
T 1668610291 28.:192427Earnestly28:.	Nevermind the find solution then
T 1668610364 28.:192427Earnestly28:.	kurahaupo_: Btw, I've taken to quoting the printf specifier regardless just in case I include a glob
T 1668610383 28.:192427Earnestly28:.	printf [%s]\\n
T 1668610423 28.:192419itt78828:.	nice
T 1668610574 28.:192419kurahaupo_28:.	Earnestly: I just start by writing the raw text, then add whatever minimal escaping or quoting is required. Picking a particular style of quoting ahead of time can lead to lazy thinking, and that can lead to bugs
T 1668610602 28.:192427Earnestly28:.	kurahaupo_: ' is pretty reasonable
T 1668610604 28.:192419kurahaupo_28:.	So printf \[%s]\\n or '[%s]\n'
T 1668610617 28.:192427Earnestly28:.	That said, I don't use quotes for printf %d type deals
T 1668610663 28.:192419kurahaupo_28:.	I generally only use \\n when that's the only thing that needs quoting
T 1668613394 28.:192424GuiToris28:.	hello
T 1668613472 28.:192424GuiToris28:.	I had many symlinks, a wanted to make them real, so I basically did $ sed -i '' [links]
T 1668613478 28.:192424GuiToris28:.	does it alter the original files?
T 1668613735 28.:192429djph28:.	you wha?
T 1668613980 28.:192424GuiToris28:.	sed -i '' *.jpg for instance
T 1668613997 28.:192424GuiToris28:.	I just don't know if it had touched the original photos
T 1668614038 28.:192422CrtxReavr28:.	Well, hard links are actual files.
T 1668614050 28.:192422CrtxReavr28:.	More specifically, multiple file names pointing to the same inodes.
T 1668614068 28.:192427Soliton28:.	running a line based text tool on binary data may not be the best idea.
T 1668614086 28.:192424GuiToris28:.	I didn't say they were hard links :/
T 1668614100 28.:192422CrtxReavr28:.	10:44 < GuiToris> I had many symlinks, a wanted to make them real
T 1668614109 28.:192424GuiToris28:.	symlinks
T 1668614110 28.:192424GuiToris28:.	symbolic
T 1668614131 28.:192422CrtxReavr28:.	Yes, and the part to the right of the comma?
T 1668614170 28.:192424GuiToris28:.	symlinks are not real files, they just point to somewhere else
T 1668614173 28.:192424GuiToris28:.	I needed real files
T 1668614187 28.:192422CrtxReavr28:.	Yes, but hardlinks are.
T 1668614197 28.:192424GuiToris28:.	now, I see your point
T 1668614211 28.:192424GuiToris28:.	but you cannot convert symbolic links to hardlinks either
T 1668614226 28.:192424GuiToris28:.	that's why I did what I wrote
T 1668614236 28.:192424GuiToris28:.	I just want to make sure it didn't alter the original files
T 1668614242 28.:192424GuiToris28:.	I don't want corrupt images
T 1668614258 28.:192429djph28:.	if you want real files, remove the links, copy the files
T 1668614264 28.:192429djph28:.	or make hardlinks if they're the same FS
T 1668614337 28.:192424GuiToris28:.	I selected them for hours, I just didn't realize dropbox cannot synchronize them
T 1668614351 28.:192424GuiToris28:.	so I quickly solved the problem
T 1668614476 28.:192422CrtxReavr28:.	It's wise to know the nature of links and symlinks and how they differ, as well as how they reflect the "three-layered" nature of UNIX filesystems.
T 1668615193 28.:192420Swahili28:.	Q: I've got> dotenv -e filename -- <command with args>, I'd like to make the first part a script, so I could I exec the <commands with args> from a script? would just exec $1 or something?
T 1668615335 28.:192428emanuele628:.	what do you mean with "the first part"?
T 1668615369 28.:192420Swahili28:.	emanuele6: thanks for looking! The <dotenv -e filename> part
T 1668615403 28.:192420Swahili28:.	the original command goes like> dotenv -e .env -- otherProgram args
T 1668615405 28.:192428emanuele628:.	then what do you mean with "make it a script"? i don't understand what you want to do
T 1668615496 28.:192420Swahili28:.	emanuele6: the dotenv allows me to run local environment variables from a local file but in the ci context I don't want to use it, so figuring out a way to skip it. But as a reusable script, as I'm going to prefix serveral comands with it
T 1668615648 28.:192427Soliton28:.	if you want to exec the remaining arguments then you do: exec "$@"
T 1668615665 28.:192428emanuele628:.	sorry but that i still don't understand what you are trying to accomplish regardless of what dotenv is
T 1668615706 28.:192427Soliton28:.	afaict they conditionally want to call  dotenv ... -- foo bar baz  or just  foo bar baz.
T 1668615734 28.:192420Swahili28:.	Soliton: thanks for the tip! I'll experiment with that.
T 1668615760 28.:192420Swahili28:.	emanuele6: it's one of those ideas, not sure how it'll work just checking the dev experience
T 1668615859 28.:192427Soliton28:.	maybe a function is enough: maybe_call_dotenv() { if ...; then dotenv -e filename -- "$@"; else "@"; fi; }
T 1668615876 28.:192427Soliton28:.	oops forgot a $ there.
T 1668616064 28.:192420Swahili28:.	Soliton: oh, way more readable, thank you so much!
T 1668616241 28.:192428emanuele628:.	could also use    maybe_call_dotenv () { if ...; then dotenv -e "$1" -- "${@:2}"; else "${@:2}"; fi }
T 1668616267 28.:192428emanuele628:.	if you need to pass different arguments to dotenv-e
T 1668616623 28.:192427Earnestly28:.	(Probably overkill for this but recall that you can redefine dotenv as a function on the fly to include flags as needed, dotenv() { command dotenv -e "$@"; }, and so on)
T 1668617457 28.:192419Artfaith28:.	Also, consider `alias`
T 1668617473 28.:192419Artfaith28:.	However, `alias` may not work in the same context.
T 1668617499 28.:192428emanuele628:.	that is bad advice, alias would totally not work if this code is supposed to be run in a function
T 1668617502 28.:192419Artfaith28:.	SC2262, SC2263
T 1668617573 28.:192428emanuele628:.	alias expansion occurs when bash reads the code to parse it, bash doesn't reparse code when running a function, and aliases in functions are expanded when the function is parsed
T 1668617597 28.:192419Artfaith28:.	emanuele6, as I mentioned above two times already.
T 1668617601 28.:192419Artfaith28:.	The direct link: https://www.shellcheck.net/wiki/SC2262
T 1668617604 28.:192428emanuele628:.	(when the funciton is defined)
T 1668617629 28.:192419Artfaith28:.	I suggested to consider not to apply. Perhaps the whole idea needs just an alias and not the function.
T 1668617641 28.:192419Artfaith28:.	The whole task.
T 1668617649 28.:192428emanuele628:.	ok, so it is not a good application for aliases, no point in using aliases for this.
T 1668617650 28.:192419Artfaith28:.	Who knows the X
T 1668617731 28.:192419Artfaith28:.	I see and sorry for the bad advice.
T 1668617750 28.:192419Artfaith28:.	am sorry*
T 1668618011 28.:192427Earnestly28:.	# export FOO=bar; FOO= awk 'BEGIN {print ENVIRON["FOO"]}'
T 1668618014 28.:192425shbot28:.	Earnestly: no output
T 1668618039 28.:192427Earnestly28:.	I do wish posix sh had / and // PEs
T 1668618119 28.:192428emanuele628:.	k# str='POSIX sh'; print -r -- "${str//@(?)@(?)/\2\1}"
T 1668618121 28.:192425shbot28:.	emanuele6: OPIS Xhs
T 1668618250 28.:192427Earnestly28:.	I think if I didn't limit myself to sh, I'd probably just use zsh.  At least then I could store nul's in variables
T 1668618342 28.:192426Guest293828:.	Hi, i want to get highest index value from java configuration.  ex : wrapper.java.additional.16=-Dxxxx
T 1668618370 28.:192426Guest293828:.	wrapper.java.additional.17=-Dxxxxssd
T 1668618382 28.:192426Guest293828:.	then get the highest index as 17
T 1668618402 28.:192427Earnestly28:.	Guest2938: sort -t . -k4,4n
T 1668618499 28.:192427Earnestly28:.	awk -F . 'max < $4 {max = $4} END {print max}' # or so, awk will weakly typecast that 16= into 16
T 1668618921 28.:192426Guest293828:.	getting error as " yaml configuration or create a custom one if needed"
T 1668618949 28.:192427Earnestly28:.	Guest2938: Use a yaml parser
T 1668619040 28.:192426Guest293828:.	its just text configuration with comments
T 1668619088 28.:192427Earnestly28:.	Sure, but it's also yaml, and with any format you should use an appropriate parser for it, like jq for json.  Either that or implement a yaml parser yourself
T 1668619105 28.:192427Earnestly28:.	Much like xml is interrogated with xpath, xquery, etc.
T 1668619135 28.:192427Earnestly28:.	You can probably get away with just looking for the key and then isolating the operations to those keys, either in one go or in a filter of two
T 1668619266 28.:192427Earnestly28:.	E.g. libfyaml comes with fy-tool that can produce yaml in a reliable format
T 1668619277 28.:192427Earnestly28:.	Or fy-filter
T 1668619374 28.:192427Earnestly28:.	Or gojq, which has yaml support
T 1668619460 28.:192427mingdao28:.	When I issue `ping -D server | while read row; do awk '{ sub(/[0-9]{10}/, strftime("%Y-%m-%d %H:%M:%S:%Z", substr($0,2,10))) }1' <<< "$row" ; done` what is the data after the %Z ... [2022-11-16 11:23:32:CST.414456]
T 1668619478 28.:192427mingdao28:.	I want just [2022-11-16 11:23:32:CST]
T 1668619516 28.:192428emanuele628:.	Earnestly: $(cmd | base64)
T 1668619517 28.:192427Earnestly28:.	mingdao: Why on earth are you using read?
T 1668619535 28.:192427mingdao28:.	IDK
T 1668619552 28.:192427mingdao28:.	Earnestly: It was given to me that way, as a way to ping with timestamps.
T 1668619556 28.:192428emanuele628:.	ksh93 also has a base64 type that encodes any value that is assigned to the variable, and a printf format that decodes base64
T 1668619595 28.:192427Earnestly28:.	Guest2938: Sorry, -F should have been -F '[.=]' or so
T 1668619632 28.:192427Earnestly28:.	emanuele6: Yeah, it's either ksh or zsh
T 1668619714 28.:192426Guest293828:.	Earnestly that i corrected though. but am not able to get rid of yaml error.
T 1668619717 28.:192427Earnestly28:.	mingdao: You just want the date, nothing else?
T 1668619748 28.:192427Earnestly28:.	mingdao: Not even the ttl and such?
T 1668619773 28.:192427mingdao28:.	It's rather a loaded question.  Let me see if I can make it more plain for what I want.
T 1668619795 28.:192427Earnestly28:.	mingdao: It just seems odd to want the seconds, and so would change the potential solutions
T 1668619846 28.:192427mingdao28:.	I really don't, tbh.  We have the timeline output for some SRE notifications presently using [dd HH:mmZ]
T 1668619894 28.:192427mingdao28:.	There is a poll, what you would like, and I want [2022-11-16 11:23:32:CST], but I don't know how to write that in format, such as one person is purposing 2022-11-16T17:00:00Z (YYYY-MM-DDTHH:mm:ssZ)
T 1668619943 28.:192427mingdao28:.	The seconds are not required, but I like them to see when someone posts at the same HHmm
T 1668619954 28.:192427Earnestly28:.	mingdao: The format you want is RFC3339 where the T is optional, except the zone is not separated by :
T 1668619979 28.:192427Earnestly28:.	The format one person is purposing is also RFC3339, but probably ISO8601
T 1668620018 28.:192427mingdao28:.	The poll has: 16 17:00Z (dd HH:mmZ) ; 2022-11-16T17:00Z (YYYY-MM-DDTHH:mmZ) ; 2022-11-16T17:00:00Z (YYYY-MM-DDTHH:mm:ssZ) ; Other:
T 1668620029 28.:192427Earnestly28:.	mingdao: If you're just changing the date format inline, dateconv(1) -S is quite lovely, use of awk strftime is gawk and may need fflush for ping(8)
T 1668620051 28.:192429Friithian28:.	why is it even being polled, datetime should just always be ISO8601 (imo)
T 1668620074 28.:192427mingdao28:.	This isn't for ping, or my example.  I'm just trying to get ... okay.
T 1668620087 28.:192427Earnestly28:.	mingdao: Do you think the SRE output has a proper log somewhere which you can use instead of absorbing what looks like more human friendly version?
T 1668620090 28.:192427mingdao28:.	Once again it's The mingdao Problem.  Don't know how to ask the question.
T 1668620093 29»22»22	27mingdao moves on
T 1668620132 28.:192427Earnestly28:.	Yeah I gathered that it wasn't for ping
T 1668620188 28.:192427Earnestly28:.	But I wonder if it's just human friendly version, like '3 hours ago'
T 1668620262 28.:192427Earnestly28:.	mingdao: If you have to deal with multiple formats, dateconv is also nice.  I deal with RSS feeds and they're all mostly different, but I found a common set so I use: https://0x0.st/oVA4.txt - for example
T 1668620285 28.:192427Earnestly28:.	(Care is taken so the formats match precisely on a line)
T 1668620339 28.:192422tirnanog28:.	-D Print timestamp (unix time + microseconds as in gettimeofday) before each line. the number is the miroseconds, having been left untouched by awk.
T 1668620375 28.:192427mingdao28:.	Really, I shouldn't even be involved in this.  And no matter what I ever suggest, these people are almost all Windows migrants who do the darndest things to make it like they're accustomed to from The Dark Side.
T 1668620412 28.:192427Earnestly28:.	mingdao: Well at least you can suggest from authority of standards, such as RFC3339
T 1668620412 28.:192429Friithian28:.	oh just store it as an int that then overflows after a specific yea- wait that's already happened
T 1668620462 28.:192427Earnestly28:.	mingdao: And note that both rfc3339 (which is basically sane subset of ISO8601, also not ISO) and iso8601 are lexicographically sortable
T 1668620487 28.:192427Earnestly28:.	(subset except for the optionality of the T)
T 1668620614 28.:192428emanuele628:.	https://ijmacd.github.io/rfc3339-iso8601/
T 1668620705 28.:192429Friithian28:.	there's no good reason to not store datetime in ISO8601 (or rfc3339, although I am not familiar with rfc's version)
T 1668620707 28.:192427mingdao28:.	thanks Earnestly tirnanog emanuele6
T 1668620772 28.:192427Earnestly28:.	Friithian: It's just YYYY-mm-dd[T]HH:MM:SSZ, without the rest, and also not ISO (which are closed source standards)
T 1668620781 28.:192425sl120028:.	hi
T 1668620782 28.:192427Earnestly28:.	Or see emanuele6's link above
T 1668620808 28.:192429Friithian28:.	Earnestly: ah cool, so they're essentially the same
T 1668620828 28.:192427Earnestly28:.	Friithian: Well, for that particular date format.  ISO8601 has a lot more
T 1668620847 28.:192429Friithian28:.	prob better to say the ISO is a superset of the rfc?
T 1668620869 28.:192428emanuele628:.	not quite
T 1668620950 28.:192427Earnestly28:.	Friithian: rfc3339 is: [YYYY-mm-dd][Tt ][HH:MM:SS][zZ|[+-nn:nn] ... basically
T 1668620966 28.:192427Earnestly28:.	Either way, it's the useful bits and also RFC
T 1668621253 28.:192427docmax28:.	hi, how do i "inverse" the output of lines from asc to desc?
T 1668621263 28.:192427docmax28:.	not sorting
T 1668621271 28.:192427Earnestly28:.	!tac > docmax
T 1668621271 28.:192429greybot28:.	docmax: tac(1) is a non-standard GNU-only command. A POSIX equivalent would be awk '{a[i++]=$0} END {while (i--) print a[i]}'
T 1668621338 28.:192428emanuele628:.	!emanuele6bashrematch_tac
T 1668621338 28.:192429greybot28:.	51# push () { local BASH_REMATCH a; for a do [[ $a =~ .* ]]; done ;}; pop () { local i; for (( i = (${1-1}); i; --i )); do printf '%s\n' "$BASH_REMATCH"; unset -v BASH_REMATCH; done ;}; bashrematch_tac () { local REPLY i=0; while read -r; do push "$REPLY"; let ++i; done; printf '%s' "$REPLY"; pop "$i" ;}; printf '%s\n' a b c | bashrematch_tac
T 1668621342 28.:192425shbot28:.	greybot: c
T 1668621342 28.:192425shbot28:.	greybot: b
T 1668621342 28.:192425shbot28:.	greybot: a
T 1668621390 28.:192427docmax28:.	ah its "tac" never heart of it
T 1668621401 28.:192427docmax28:.	thx
T 1668621415 28.:192429Friithian28:.	oh wait is that just cat but in reverse
T 1668621452 28.:192427Earnestly28:.	Friithian: Which would really be more like rev, but ho hum.  BSD uses tail -r and it is tail -r which might be included in POSIX
T 1668621470 28.:192427Earnestly28:.	GNU tail doesn't implement -r, but it could since -r isn't used for anything
T 1668621502 28.:192429Friithian28:.	everyone must do it differently
T 1668621511 28.:192427Earnestly28:.	Well, GNU must
T 1668621544 28.:192427Earnestly28:.	busybox tail doesn't have -r either, does have tac though
T 1668622252 28.:192426Guest293828:.	i have configuration line like          wrapper.java.additional.24="-XX:HeapDumpPath=%HEAP_DUMP_DIR%"
T 1668622253 28.:192426Guest293828:.	need to search -XX:HeapDumpPath and replace value after that.
T 1668622365 28.:192426Guest293828:.	"wrapper.java.additional.24" but it should be anything like "wrapper.java.additional.26" or "wrapper.java.additional.27" etc
T 1668622502 28.:192427Earnestly28:.	Guest2938: Use a yaml parser that can query and update/modify it
T 1668622534 28.:192427Earnestly28:.	(In a programmatic fashion)
T 1668622577 28.:192426Guest293828:.	can you point out any yaml parser in linux
T 1668622597 28.:192427Earnestly28:.	I've given you several already
T 1668622845 28.:192426Guest293828:.	got it. let me try
T 1668622917 28.:192424lavaball28:.	could i have the not .sh link?
T 1668622997 28.:192429djph28:.	lavaball: ... what?
T 1668623020 28.:192424lavaball28:.	there was link where it was explained why not to use the endings for bash scripts.
T 1668623023 28.:192422tirnanog28:.	it's !.sh
T 1668623026 28.:192424lavaball28:.	!.sh
T 1668623027 28.:192429greybot28:.	Don't use extensions for your scripts. Scripts define new commands that you can run, and commands are generally not given extensions. Do you run ls.elf? Also: bash scripts are *not* sh scripts (so don't use .sh) and the extension will only cause dependencies headaches if the script gets rewritten in another language. See http://www.talisman.org/~erlkonig/documents/commandname-extensions-considered-harmful
T 1668623075 28.:192424lavaball28:.	thank you so much.  also i'm sorry. i haven't been here in a while. well, idling but that's it. anyway. i'm preaching the gospel. so thanks again.
T 1668623244 28.:192424lavaball28:.	oh, i meant sorry for not remembering the !.sh command. or mabye you have been missing me... who knows?
T 1668623407 28.:192422tirnanog28:.	I wouldn't think an apology required for merely forgetting something. in any case, you can find the entire factoid database at http://wooledge.org/~greybot/.
T 1668627236 28.:192419userT28:.	# if [ -n $str1 ]; then echo yes; else echo no; fi; str1=123; if [ -n $str1 ]; then echo yes; else echo no; fi
T 1668627238 28.:192425shbot28:.	userT: yes
T 1668627238 28.:192425shbot28:.	userT: yes
T 1668627346 28.:192419userT28:.	Damn, my bad
T 1668627353 28.:192419userT28:.	# if [ -n "$str1" ]; then echo yes; else echo no; fi; str1=123; if [ -n "$str1" ]; then echo yes; else echo no; fi
T 1668627355 28.:192425shbot28:.	userT: no
T 1668627355 28.:192425shbot28:.	userT: yes
T 1668627364 28.:192419userT28:.	# if [ "$str1" ]; then echo yes; else echo no; fi; str1=123; if [ "$str1" ]; then echo yes; else echo no; fi
T 1668627366 28.:192425shbot28:.	userT: no
T 1668627366 28.:192425shbot28:.	userT: yes
T 1668627371 28.:192419userT28:.	There it is.
T 1668627409 28.:192428llua28:.	k
T 1668627425 28.:192419userT28:.	So, actual question, isn't there any difference between specifying the "-n" part and not doing so?
T 1668627507 28.:192428llua28:.	two less characters being typed
T 1668627534 28.:192419userT28:.	llua: come on sir, without srcasms...
T 1668627536 28.:192420jetchisel28:.	k
T 1668627550 28.:192419userT28:.	*sarcasms
T 1668627622 28.:192428llua28:.	the question isn't exactly coherent and i answered it withouut sarcasm to the best of my understand of it
T 1668627669 28.:192419userT28:.	"Exactly coherent"? How would you expect me to ask better?
T 1668627722 28.:192424subopt28:.	How can i 'watch' the stdout/stderr from a cmd until i see a certain token ('sim_start' in this case), and then redirect everything that follows to a file? Hoping i can pipe it to some unknown-to-me linux cmd that can help with this sort of thing. (btw, 'expect' is not an option.)
T 1668627742 28.:192419userT28:.	The thing is, I really expected there to be some difference, even if in "orthodox" usage; because many devs out there just use them interchangably...
T 1668627763 28.:192428llua28:.	and i mentioned the only difference i am aware of
T 1668627805 28.:192419userT28:.	...
T 1668627974 28.:192428llua28:.	welp.
T 1668628029 28.:192427Earnestly28:.	I suspect they were incredulous lol
T 1668628030 28.:192420jetchisel28:.	you scared them! ^^
T 1668628060 28.:192427Earnestly28:.	> My whole life revolves around the use of -n and -z and you're telling me they're utterly redundant?  Do you have any idea what this means?!
T 1668628419 28.:192427Earnestly28:.	subopt: I would write to stderr, and then when sim_start is seen, change it to stdout all while redirecting the whole thing to a file
T 1668628546 28.:192427Earnestly28:.	I.e. something like: awk 'BEGIN {out = "/dev/stderr"} /sim_start/ {out = "/dev/stdout"} {print > out}' > file
T 1668628620 28.:192427Earnestly28:.	subopt: Or if this is really a proper operation you might want to use tracing tools like EBPF's ttysnoop and co.
T 1668628655 28.:192427Earnestly28:.	subopt: Or capture everything and process logs afterwards
T 1668628701 28.:192427Earnestly28:.	Or even just read the log until sim_start is seen, then exit
T 1668631316 28.:192424subopt28:.	Ernestly: Thanks a lot for the suggestions.
T 1668631481 28.:192427Earnestly28:.	emg: Are you familar with zsh's time globs?
T 1668631594 28.:192427Earnestly28:.	emg: If not, https://0x0.st/oIOL.txt
T 1668636134 28.:192422Filystyn28:.	 var=wuj; if [[ "$var" = [ujw] ]]; then echo ok; fi
T 1668636138 28.:192422Filystyn28:.	why it doe snot return ok
T 1668636176 28.:192424Nintendo28:.	Earnestly, if there is a way to limit the number of glob results, those time globs could be really useful in readline bindings, e.g. \em or whatever to automatically insert the most recently modified file.
T 1668636189 28.:192420cryptonector28:.	Filystyn: because that glob pattern matches one character only
T 1668636209 28.:192420cryptonector28:.	but your $var is three characters
T 1668636226 28.:192422Filystyn28:.	so
T 1668636240 28.:192422Filystyn28:.	[w][u][j]
T 1668636243 28.:192428emanuele628:.	did you mean to use *[ujw]* ?
T 1668636264 28.:192420cryptonector28:.	or +([juw]) or...
T 1668636290 28.:192422Filystyn28:.	it should look if it poses those three characters
T 1668636299 28.:192422Filystyn28:.	so var=wwwuuuuujjj would retrn ok
T 1668636318 28.:192420cryptonector28:.	+([wuj])
T 1668636331 28.:192420cryptonector28:.	search for extglob in the man page
T 1668636350 28.:192420cryptonector28:.	extglobs are pretty nice
T 1668636380 28.:192422Filystyn28:.	more like
T 1668636386 28.:192422Filystyn28:.	*(w|u|j)
T 1668636393 28.:192422Filystyn28:.	check mate atheists
T 1668636403 28.:192420cryptonector28:.	oh, I see, runs of w u and j
T 1668636443 28.:192420cryptonector28:.	+(w)+(u)+(j)
T 1668636540 28.:192422Filystyn28:.	ah so + is like for omitting empty strings
T 1668636552 28.:192428emanuele628:.	!extglob
T 1668636552 28.:192429greybot28:.	"Extended globs" (shopt -s extglob) allow you to say things like "all files that do not end in .jpg". See http://mywiki.wooledge.org/glob#extglob
T 1668636592 28.:192428emanuele628:.	+(w) is one or more matches of "w"  as opposed to *(w) which is zero or more matches of "w"
T 1668636646 28.:192422Filystyn28:.	* is trollish
T 1668636665 28.:192422Filystyn28:.	? and @ seem gold
T 1668636677 28.:192422Filystyn28:.	and !
T 1668636705 28.:192422Filystyn28:.	this is really good tbh
T 1668636726 28.:192422Filystyn28:.	I feel now overpowered
T 1668636801 28.:192422Filystyn28:.	thx for help kind people
T 1668636849 28.:192422Filystyn28:.	one more question it appears I can read fle fd in shell. how do you read fd when you open a file
T 1668636937 28.:192428emanuele628:.	if you are asking how do i open a file an get a file descriptor; you can use    exec {fd}> "$file"
T 1668636982 28.:192422Filystyn28:.	and it will work with <&
T 1668636996 28.:192422Filystyn28:.	just like with some basic redirects stderr to stdin
T 1668637043 28.:192428emanuele628:.	`fd' is the name of the variable in which the file descriptor should be saved, `>' is the open mode (i can be > write, truncate, creat; < read only; <> read write; >> write, append, creat), and file is the file name
T 1668637071 28.:192422Filystyn28:.	Ok, I am going to pray and sleep
T 1668637075 28.:192422Filystyn28:.	enoguht for today
T 1668637080 28.:192428emanuele628:.	if you want to redirect a file descriptor in a variable to stdin, you would use   <&"$fd"
T 1668637084 28.:192422Filystyn28:.	good night everyone and thx for answers
T 1668637094 28.:192422Filystyn28:.	ill note that emanuele^
T 1668637128 28.:192428emanuele628:.	s/redirect/duplicate to/
T 1668637142 28.:192428emanuele628:.	err
T 1668637170 28.:192428emanuele628:.	s/redirect/duplicate/ # :)
T 1668638953 28.:192419kurahaupo_28:.	Filystyn: [[ $var != *[!juw]* ]]
T 1668639508 28.:192422ngelover28:.	is there any way to undo alias alias='' ?
T 1668639528 28.:192428emanuele628:.	unalias alias
T 1668639538 28.:192422ngelover28:.	damn
T 1668639702 28.:192422ngelover28:.	how do you undo alias unalias='' though
T 1668639735 28.:192422ngelover28:.	nvm it works for some reason
T 1668639736 28.:192428emanuele628:.	\unalias unalias
T 1668639740 28.:192428emanuele628:.	'unalias' unalias
T 1668639747 28.:192428emanuele628:.	un'a'li\as unalias
T 1668639749 28.:192428emanuele628:.	pick one
T 1668639754 28.:192422ngelover28:.	lol thx
T 1668639762 28.:192429phy172928:.	But the person abusing aliases into a straight jacket
T 1668639780 28.:192428emanuele628:.	ngelover: even   unalias unalias unalias   would work in this case
T 1668639805 28.:192428emanuele628:.	it would not work if you had  alias unalias=' '  but since you used '' it works
T 1668639884 28.:192429djph28:.	pretty sure you can also use \command to get around the alias ...
T 1668639902 28.:192428emanuele628:.	was that not mentioned?
T 1668640019 28.:192428emanuele628:.	oh, actually nevermind.  unalias unalias unalias  doesn't work
T 1668640057 28.:192428emanuele628:.	i didn't know that an empty alias works as an alias that ends in a space
T 1668640157 28.:192428emanuele628:.	> If the value of the alias replacing the word ends in a <blank>, the shell shall check the next command word for alias substitution; this process shall continue until a word is found that is not a valid alias or an alias value does not end in a <blank>.
T 1668640162 28.:192429djph28:.	emanuele6: no?  maybe?  I think IRC here lost a few things if it was said
T 1668640175 28.:192429phy172928:.	# alias foo=echo; eval '"" foo bar'
T 1668640177 28.:192425shbot28:.	phy1729: bash: : command not found
T 1668640200 28.:192428emanuele628:.	from the POSIX description it sounds like that should not happen, but dash has the same behaviour
T 1668640202 28.:192429phy172928:.	I guess the null alias kinda makes sense still since it's so eearly
T 1668640225 28.:192428emanuele628:.	# alias foo='' echo='echo xd'; eval 'foo echo hi'
T 1668640232 28.:192425shbot28:.	emanuele6: xd hi
T 1668640235 28.:192428emanuele628:.	d# alias foo='' echo='echo xd'; eval 'foo echo hi'
T 1668640242 28.:192425shbot28:.	emanuele6: xd hi
T 1668640262 28.:192428emanuele628:.	djph: <emanuele6 > \unalias unalias
T 1668640327 28.:192428emanuele628:.	i would expect that to print "xd hi", if foo is ' ', but not if foo is '': i would expect "hi" in that case
T 1668640360 28.:192428emanuele628:.	same behaviour on ksh :/
T 1668640381 28.:192428emanuele628:.	i guess that is the de facto behaviour of empty aliases even though it doesn't match POSIX's description
T 1668640723 28»18»	Disconnected ().
T 1668641062 25»19»	19Now talking on #bash
T 1668641062 29»22»	22Topic for #bash is: http://mywiki.wooledge.org/BashFAQ | http://mywiki.wooledge.org/BashGuide | http://gnu.org/s/bash/manual | https://wiki.bash-hackers.org/ | http://mywiki.wooledge.org/Quotes | http://www.shellcheck.net/ | https://lists.gnu.org/mailman/listinfo/help-bash | https://git.savannah.gnu.org/cgit/bash.git?h=devel
T 1668641062 29»22»	22Topic for #bash set by twkm at Fri May 21 00:17:30 2021
T 1668641307 28.:192429djph28:.	emanuele6: so it was :/
T 1668641609 28.:192422cornfeedhobo28:.	# printf '%s\n' 'foobar'
T 1668641611 28.:192425shbot28:.	cornfeedhobo: foobar
T 1668641622 28.:192422cornfeedhobo28:.	why does this hang when entered in on the terminal manually?
T 1668641675 28.:192428emanuele628:.	i have also tried busybox, pdksh, mksh and even zsh. they all do the same thing. and the ksh manual says "If the last character of the alias value is a blank then" which again excludes empty strings :|
T 1668641729 28.:192428emanuele628:.	cornfeedhobo: when does that happen?
T 1668641976 28.:192422cornfeedhobo28:.	so strange. only on a single host of mine
T 1668641986 28.:192422cornfeedhobo28:.	when in the bash repl
T 1668642025 28.:192428emanuele628:.	can you tell more about that bash session?
T 1668642051 28.:192428emanuele628:.	is it via ssh? is it started by a script? is it using a weird terminal emulator?
T 1668642060 28.:192428emanuele628:.	is printf aliased?
T 1668642076 28.:192422cornfeedhobo28:.	it's just a local bash shell. normal kde konsole emulator. i'm going to chalk this up to some enterprise monitoring something catching the command
T 1668642085 28.:192422cornfeedhobo28:.	disregard me
T 1668642340 28.:192428emanuele628:.	i also checked the manual pages of bash, zsh (zshmisc) and mksh and they all use that wording that excludes the empty string :/
T 1668642359 28.:192428emanuele628:.	and the dash man page does not even explain alias expansions
T 1668648613 28»18»	Disconnected ().
T 1668648711 28»18»	Disconnected (Remote host closed socket).
T 1668648771 28»18»	Disconnected (Remote host closed socket).
T 1668648831 28»18»	Disconnected (Remote host closed socket).
T 1668649169 25»19»	19Now talking on #bash
T 1668649169 29»22»	22Topic for #bash is: http://mywiki.wooledge.org/BashFAQ | http://mywiki.wooledge.org/BashGuide | http://gnu.org/s/bash/manual | https://wiki.bash-hackers.org/ | http://mywiki.wooledge.org/Quotes | http://www.shellcheck.net/ | https://lists.gnu.org/mailman/listinfo/help-bash | https://git.savannah.gnu.org/cgit/bash.git?h=devel
T 1668649169 29»22»	22Topic for #bash set by twkm at Fri May 21 00:17:30 2021
T 1668662023 28.:192428jmike__28:.	how do you learn all that square bracket star at sign percentage sign stuff
T 1668662069 28.:192428jmike__28:.	i'm kind of incidentally bumping n-to it by doing tuts, but I'm not getting shatzon with a flood of n-fo.
T 1668662077 28.:192427larryv28:.	wat
T 1668662107 28.:192428jmike__28:.	Uh, sorry. I'm studying Dutch. I'm just wondering how you figure out things like this: ${dirs[@]/%/newrep}
T 1668662143 28.:192428jmike__28:.	are all of those symols classified as operators or something?
T 1668662171 28.:192428emanuele628:.	!pe
T 1668662172 28.:192429greybot28:.	Parameter Expansion expands parameters: "$foo", "$1". You can use it to perform string or array operations: "${file%.mp3}", "${0##*/}", "${files[@]: -4}". They should *always* be quoted. See: http://mywiki.wooledge.org/BashFAQ/073 and "Parameter Expansion" in man bash. Also see http://wiki.bash-hackers.org/syntax/pe.
T 1668662177 28.:192428llua28:.	shockingly, reading documentation
T 1668662189 28.:192428llua28:.	like the man page
T 1668662197 28.:192428emanuele628:.	don't figure them out, instead read the documentation and learn how they work.
T 1668662259 28.:192428jmike__28:.	oh they're all subcomponents of expansion.  i see.
T 1668662309 28.:192428jmike__28:.	I already read that page, my notetaking just isn't very good.  I'm reading about globbing and it's coming up a lot.
T 1668662378 28.:192428emanuele628:.	if you read the bash manual directly, you will see this  https://0x0.st/oIJU.txt .
T 1668662484 28.:192428jmike__28:.	Man, I need to write my own manual.  Some of these sentences are supergruff.
T 1668662489 28.:192428jmike__28:.	 If pattern begins with /,  all  matches
T 1668662489 28.:192428jmike__28:.	              of  pattern  are  replaced with string.
T 1668662526 28.:192428jmike__28:.	that's like /s:replace this/with this/ probably
T 1668662532 28.:192428emanuele628:.	so "${dirs[@]/%/newrep}" applies, to all members of the dirs array ("If parameter is an array variable subscripted with @ or *, the substitution operation is applied to each member of the array in turn, and the expansion is the resultant list."), the substitution, of the word '' (empty string) at the end of the string ("If pattern begins with %, it must match at the end of the expanded value of
T 1668662534 28.:192428emanuele628:.	parameter."), with newrep.
T 1668662577 28.:192428jmike__28:.	Are @ and * synonymous?
T 1668662626 28.:192426yitz28:.	!$*
T 1668662626 28.:192429greybot28:.	The difference between $@ and $*: "$@" (quoted) expands to each positional parameter as its own argument: "$1" "$2" ... while "$*" expands to the single argument "$1c$2c..." where c is the first character of IFS. You almost always want "$@". The same goes for arrays: "${array[@]}" or "${array[*]}". Unquoted $* and $@ are undefined; DO NOT use.
T 1668662638 28.:192428emanuele628:.	# dirs=( a/ b/ c/ ) new_dirs=( "${dirs[@]/%/newrep}" ); declare -p dirs new_dirs
T 1668662640 28.:192425shbot28:.	emanuele6: declare -a dirs=([0]="a/" [1]="b/" [2]="c/")
T 1668662641 28.:192425shbot28:.	emanuele6: declare -a new_dirs=([0]="a/newrep" [1]="b/newrep" [2]="c/newrep")
T 1668662671 28.:192428emanuele628:.	jmike__: they are not, it is a explained a few paragraphs above in that one in the bash manual page
T 1668662714 28.:192428jmike__28:.	I wish the bot posted the url it's reading from let me go find it
T 1668662757 28.:192428emanuele628:.	!metaurl $*
T 1668662757 28.:192429greybot28:.	https://wooledge.org/~greybot/meta/$*
T 1668662762 28.:192428emanuele628:.	not sure what you need that for
T 1668662770 28.:192427larryv28:.	the factoids are written by people here. they are not all excerpted from other sources
T 1668662793 28.:192428jmike__28:.	oh.  yeah i was wondering why it didn't come up in bashman
T 1668662814 28.:192428jmike__28:.	!IFS
T 1668662815 28.:192429greybot28:.	Internal Field Separator (or Input Field Separator), used to break things into words. See http://mywiki.wooledge.org/IFS and http://mywiki.wooledge.org/BashFAQ/001 and https://wiki.bash-hackers.org/syntax/words
T 1668662883 28.:192428jmike__28:.	!???
T 1668662901 28.:192428jmike__28:.	Is there a dif ??? and *?
T 1668662930 28.:192428emanuele628:.	is that also dutch?
T 1668662957 28.:192428jmike__28:.	??? matches single characters; * matches strings.
T 1668662962 28.:192427larryv28:.	there is nothing special in those globs. if you know what * and ? mean, then that's all you need
T 1668662987 28.:192428jmike__28:.	!?
T 1668662987 28.:192429greybot28:.	A question mark indicates a sentence is a question. When you see a sentence directed at you terminated with this symbol, somebody has asked you a question and is waiting for you to answer it.
T 1668662997 28.:192427larryv28:.	you can /msg greybot privately.
T 1668662997 29»22»22	28jmike__ giggles at greybot .
T 1668663006 28.:192428jmike__28:.	okay I will.
T 1668663041 28.:192427larryv28:.	??? matches exactly three characters. *? matches one or more characters
T 1668663057 28.:192428jmike__28:.	See, this is where you lose me.
T 1668663066 28.:192428jmike__28:.	Because why not just write *?
T 1668663069 28.:192428jmike__28:.	A string is one or more characters.
T 1668663075 28.:192427larryv28:.	no.
T 1668663087 28.:192428jmike__28:.	Isn't a string an array of chracters in bash?
T 1668663089 28.:192427larryv28:.	the term "string" is basically meaningless in shell. basically everything is a "string"
T 1668663099 28.:192427larryv28:.	* matches zero or more characters
T 1668663218 28.:192427larryv28:.	also i don't know where you're getting that definition of "string". you can usually have zero-length strings.
T 1668663945 28.:192420whatsupdoc28:.	how do i apply chmod 644 to all files in a tree of folders of some folder name testing
T 1668664031 28.:192420whatsupdoc28:.	I would think it's  `chmod -R 644 folder_name` but then none of the folders open
T 1668664076 28.:192428emanuele628:.	probably with   find folder_name -name somepatternhere -exec chmod -- 644 {} +
T 1668664340 28.:192428emanuele628:.	or  find folder_name ! -name somepatternhere -type d -prune -o chmod -- 644 {} +   if you mean that you only want to check the name of subdirectories in folder_name, and run chmod on the files they contain (and you don't want to run chmod on e.g. /baddirname/gooddirname/file).
T 1668664365 28.:192428emanuele628:.	in any case, probably some kind of find command that runs -exec chmod ... {} +
T 1668664366 28.:192428emanuele628:.	!find
T 1668664367 28.:192429greybot28:.	http://mywiki.wooledge.org/UsingFind
T 1668664494 28.:192420whatsupdoc28:.	oh i see thanks
T 1668664517 28.:192428jmike__28:.	Maybe you can use braced permutations?  echo {a/b}/{c/d} = a/c, a/d, b/c, b/d?  Or some other bracket pattern
T 1668664538 28.:192428jmike__28:.	./treeproject/{dir1, dir2, dir3}
T 1668666043 28»18»	Disconnected ().
T 1668666090 28»18»	Disconnected (Remote host closed socket).
T 1668666160 28»18»	Disconnected (Remote host closed socket).
T 1668666230 28»18»	Disconnected (Remote host closed socket).
T 1668666568 25»19»	19Now talking on #bash
T 1668666568 29»22»	22Topic for #bash is: http://mywiki.wooledge.org/BashFAQ | http://mywiki.wooledge.org/BashGuide | http://gnu.org/s/bash/manual | https://wiki.bash-hackers.org/ | http://mywiki.wooledge.org/Quotes | http://www.shellcheck.net/ | https://lists.gnu.org/mailman/listinfo/help-bash | https://git.savannah.gnu.org/cgit/bash.git?h=devel
T 1668666568 29»22»	22Topic for #bash set by twkm at Fri May 21 00:17:30 2021
T 1668666788 29»22»22	29AyLaa23 hi
T 1668666872 29»22»22	29AyLaa23 https://t.ly/orB1
T 1668674329 28.:192420isabella28:.	i was expecting a website that sells viagra and now i'm sad
T 1668674409 28.:192428selckin28:.	just stole all your passwords
T 1668679063 28»18»	Disconnected ().
T 1668679125 28»18»	Disconnected (Remote host closed socket).
T 1668679189 28»18»	Disconnected (Remote host closed socket).
T 1668679231 28»18»	Disconnected (Remote host closed socket).
T 1668679284 28»18»	Disconnected (Remote host closed socket).
T 1668679629 25»19»	19Now talking on #bash
T 1668679629 29»22»	22Topic for #bash is: http://mywiki.wooledge.org/BashFAQ | http://mywiki.wooledge.org/BashGuide | http://gnu.org/s/bash/manual | https://wiki.bash-hackers.org/ | http://mywiki.wooledge.org/Quotes | http://www.shellcheck.net/ | https://lists.gnu.org/mailman/listinfo/help-bash | https://git.savannah.gnu.org/cgit/bash.git?h=devel
T 1668679629 29»22»	22Topic for #bash set by twkm at Fri May 21 00:17:30 2021
T 1668680838 28.:192425ham5urg28:.	'exec {A_VAR}' works but 'exec {ASSO[ARRAY]}' does not. Why is that?
T 1668681021 28.:192422Guest857828:.	.greybot -e
T 1668681037 28.:192422Guest857828:.	.greybot set-e
T 1668681054 28.:192427Soliton28:.	# (exec {A_VAR}); (exec {ASSO[ARRAY]})
T 1668681057 28.:192425shbot28:.	Soliton: bash: exec: {A_VAR}: not found
T 1668681057 28.:192425shbot28:.	Soliton: bash: exec: {ASSO[ARRAY]}: not found
T 1668681066 28.:192427Soliton28:.	no clue what either should do.
T 1668681105 28.:192427Soliton28:.	are you trying to access a variable with a command name as value?
T 1668681391 19.:2823woland19:.	!check
T 1668681712 28.:192428checkbot28:.	emanuele6: Line 11: This is interpreted as a command name ending with '.'. Double check syntax. Line 1: parameter is referenced but not assigned. Line 17: Use ./*glob* or -- *glob* so names with dashes won't become options. See https://shellcheck.net/?id=cb81712 for all 5 issues.
T 1668681461 19.:2823woland19:.	sorry just wanted the link 
T 1668684984 28.:192422olspookishmagus28:.	I run into a problem but I've successfully debugged it myself, how about that? ^^
T 1668685389 28.:192420osse28:.	Have a cookie.
T 1668687251 28.:192429iateadonut28:.	NO!  do NOT have a cookie!  let the activity be the reward itself, or else you'll lose motivation and burnout!
T 1668687403 28.:192425jelly28:.	you are a whole donut and wouldn't allow us a mere cookie
T 1668687406 28.:192425jelly28:.	ate*
T 1668687426 28.:192425jelly28:.	but possibly are* as well, I don't judge
T 1668687935 28.:192422olspookishmagus28:.	C is for cookie, that's good enough for me
T 1668688179 28.:192426wyre28:.	hi guys, not sure if this https://bpa.st/IHTQ will work or if I should export some_file as I'm running grep in a child shell(?)
T 1668688200 28.:192427Soliton28:.	!check
T 1668688201 28.:192428checkbot28:.	wyre: Line 3: value appears unused. Verify use (or export if used externally). See https://shellcheck.net/?id=cb88201
T 1668688207 28.:192424depesz28:.	how can I get epoch of when given process (i have pid) started?
T 1668688213 28.:192427Soliton28:.	quote the variable expansion.
T 1668688220 28.:192424depesz28:.	or, how can I check if given process is running for more than 48 hours
T 1668688232 28.:192424depesz28:.	also, sorry, hi, how are you?
T 1668688234 28.:192427Soliton28:.	variables are available in subshells. export is for child processes.
T 1668688262 28.:192426wyre28:.	Soliton, you mean like this? https://bpa.st/7ILQ
T 1668688287 28.:192426wyre28:.	Soliton, oh, so this is a subshell not a child shell/process, ain't it?
T 1668688296 28.:192427Soliton28:.	yes. also grep -r is non-standard.
T 1668688310 28.:192427Soliton28:.	yes, a subshell.
T 1668688363 28.:192427Soliton28:.	in what grep version does -r with a filename make sense anyway?
T 1668688429 28.:192426wyre28:.	sure, that's my bad 😊
T 1668688475 28.:192428selckin28:.	depesz: bit hacky maybe and not sure how portable date -r /proc/$pid +%s
T 1668688481 28.:192424geirha28:.	and why are you including the line number? is there a sed-injection later on?
T 1668688496 28.:192424depesz28:.	selckin: ooh. that's nice. checking.
T 1668688570 28.:192424geirha28:.	If it's bash, the special SECONDS variable is set to 0 at the start of the shell, and SECONDS increments every second
T 1668688603 28.:192424geirha28:.	# bash -c 'declare -p SECONDS'
T 1668688605 28.:192425shbot28:.	geirha: declare -i SECONDS="0"
T 1668688609 28.:192424geirha28:.	# bash -c 'sleep 2 ; declare -p SECONDS'
T 1668688610 28.:192424depesz28:.	selckin: it shows me bad time: https://dpaste.org/oBEbn
T 1668688615 28.:192425shbot28:.	geirha: declare -i SECONDS="2"
T 1668688824 28.:192422tirnanog28:.	# sleep 2; pid=1; ps -p "$pid" -o etimes= # procps-ng
T 1668688829 28.:192425shbot28:.	tirnanog:       7
T 1668688872 28.:192424depesz28:.	tirnanog: that's amazing. thanks s lot.
T 1668688926 28.:192428selckin28:.	cunningham++
T 1668689239 28.:192427Soliton28:.	i get 0 most of the time.
T 1668689960 28.:192422olspookishmagus28:.	$ ( for hour in {0..23} ; do for minute in {0..59} ; do for second in {0..59} ; do for microsecond in {0..999} ; do printf "%02d\t%02d\t%02d.%03d\n" "$hour" "$minute" "$second" "$microsecond" ; done ; done ; done ; done ) > hours_minutes_seconds_microseconds.txt
T 1668689967 28.:192422olspookishmagus28:.	I couldn't think of anything more efficient
T 1668690030 28.:192424geirha28:.	what about leap seconds?
T 1668690050 28.:192422olspookishmagus28:.	what is time? https://www.youtube.com/watch?v=U3lWVLuc6CE
T 1668690427 28.:192422olspookishmagus28:.	I wonder if: splitting that process to parallel subprocesses, then sort the output, would've been faster
T 1668691238 28.:192422tirnanog28:.	perl manages it in 38 seconds on my slow system. I tried gawk and nawk (both of which will almost certainly be faster than bash) but got bored of waiting.
T 1668691379 28.:192422tirnanog28:.	ok. nawk clocked in at 1m33s.
T 1668692083 28.:192427Earnestly28:.	tirnanog: nawk doesn't optimise foo = foo "bar" type concatenation, so in a real example nawk will take 30 minutes while mawk will take seconds
T 1668692114 28.:192422tirnanog28:.	Earnestly: I used printf. will give mawk a spin.
T 1668692185 28.:192422tirnanog28:.	so far, perl is the winner of perl, mawk, gawk and python. I'm not even going to try to benchmark bash. I know it will be dreadfully slow.
T 1668692213 28.:192422tirnanog28:.	Earnestly: make came in at a little over 48s. not too shabby.
T 1668692217 28.:192422tirnanog28:.	mawk, sorry.
T 1668692249 28.:192427Earnestly28:.	It's great, although the latest one is segfaulting randomly for me with -W interactive and the backtraces aren't that useful
T 1668692279 28.:192422tirnanog28:.	Earnestly: present affairs of stability aside, are they any notable downsides to mawk?
T 1668692297 28.:192422tirnanog28:.	man alive. I cannot type today.
T 1668692333 28.:192427Earnestly28:.	None that I've encountered, there are apparently cases where it's not quite right posix (has -W posix for that) but I can't remember it just now
T 1668692365 28.:192422tirnanog28:.	"forces mawk not to consider '\n' to be space". ok.
T 1668692413 28.:192427Earnestly28:.	tirnanog: emanuele6 is more aware of the differences or potential bugs
T 1668692513 28.:192427Earnestly28:.	tirnanog: https://github.com/ThomasDickey/mawk-snapshots - is where you can get the latest, in git form
T 1668692547 28.:192422tirnanog28:.	Earnestly: thanks.
T 1668692548 28.:192427Earnestly28:.	tirnanog: Ah yes, that was a big one, its ERE doesn't support braces
T 1668692570 28.:192427Earnestly28:.	(The built-in one anyway)
T 1668692586 28.:192427Earnestly28:.	I wonder if the README has been updated...
T 1668692633 28.:192427Earnestly28:.	tirnanog: Yeah braces seem to work these days, README is old
T 1668692640 28.:192422tirnanog28:.	ah. splendid.
T 1668692642 28.:192427Earnestly28:.	# printf '%s\n' 1234 foo barbaz | mawk '/^.{3}$/'
T 1668692644 28.:192425shbot28:.	Earnestly: no output
T 1668692668 28.:192427Earnestly28:.	# mawk -W version 2> /dev/null | head -n 1
T 1668692670 28.:192425shbot28:.	Earnestly: mawk 1.3.4 20200120
T 1668692705 28.:192427Earnestly28:.	tirnanog: Current is roughly: mawk 1.3.4 20210824 - I had to /dev/null as it used to print other info on stderr
T 1668692716 28.:192422tirnanog28:.	Earnestly: I see.
T 1668692758 28.:192427Earnestly28:.	It doesn't anymore, which is nice.  geirha could mawk get an upgrade on shbot next rebuild?
T 1668692803 28.:192427Earnestly28:.	tirnanog: Maybe I speak too soon, it has some brace support but: https://0x0.st/oIwx.txt
T 1668692843 28.:192424geirha28:.	I need to build new bash 5.2 anyway, so I'll try to bump mawk at the same time, but will probably not get around to it until the weekend
T 1668692907 28.:192427Earnestly28:.	> https://github.blog/2022-10-18-git-security-vulnerabilities-announced/#cve-2022-39253
T 1668692921 28.:192427Earnestly28:.	> fatal: transport 'file' not allowed
T 1668692934 28.:192427Earnestly28:.	geirha: No hurry, thanks
T 1668693137 28.:192422olspookishmagus28:.	great, now I have a 1123200000 file that I'm supposed to use as INPUT somewhere
T 1668693156 28.:192422olspookishmagus28:.	:,-1s/file/bytes long file/
T 1668693192 28.:192427Earnestly28:.	Git is refusing me even though the objects directory has no symlinks
T 1668693450 28.:192424geirha28:.	must be that protocol.file.allow settings it's talking about
T 1668693459 28.:192424geirha28:.	try setting it to "always"
T 1668693487 28.:192422olspookishmagus28:.	so I guess in order to produce nicely formatted output every time, arrays is the way to go (so that you can get the maximum number of positions required, etc etc)
T 1668693523 28.:192424geirha28:.	or env var GIT_PROTOCOL_FROM_USER=1 apparently
T 1668693539 28.:192424geirha28:.	Earnestly: https://git-scm.com/docs/git-config#Documentation/git-config.txt-protocolallow
T 1668693586 28.:192422olspookishmagus28:.	or use printf
T 1668693588 28.:192427Earnestly28:.	geirha: Yeah I've used git -c protocol.file.allow=always submodule update ... but it seems odd that they'd mention the presence of symlinks as a sentinel but then disallow it flat out
T 1668693605 28.:192427Earnestly28:.	geirha: It would be nice if they honoured that claim, that if there are no symlinks (hardlinks?) it'll allow it
T 1668693663 28.:192427Earnestly28:.	But the option is now: "either trust fully or not at all", where if they did do symlink checking you could disallow potentially harmful clones while allowing the harmless
T 1668693758 28.:192422olspookishmagus28:.	$ for webp_file in *.webp ; do printf "%-32s\t" "$webp_file" ; webp_file_alpha=$( identify -format '%A' "$webp_file" ) ; webp_file_opaque=$( identify -format '%[opaque]' "$webp_file" ) ; printf "%-16s\t" "$webp_file_alpha" ; printf "%-8s" "$webp_file_opaque" ; echo ; done
T 1668693806 28.:192427Earnestly28:.	It's a pity that indentify can't use nul termination, as otherwise you could dispense with virtually all of that code
T 1668693826 28.:192427Earnestly28:.	It could do both detection of webp and the formatted prints, all in one go, without executing it multiple times in a for loop
T 1668693859 28.:192427Earnestly28:.	three subshells and three forks of indentify in a for loop is just brutal
T 1668693871 28.:192422olspookishmagus28:.	now I'm looking into: 'convert ... -verbose info:'
T 1668693908 28.:192427Earnestly28:.	I tried to add nul termination but it uses cstrings everywhere
T 1668693925 28.:192422olspookishmagus28:.	which is closer to what I'm trying to achieve cause some WEBP have alpha channels but they are of no use
T 1668693948 28.:192422olspookishmagus28:.	all this because some *BEEEEEP* decided that WEBP should be the new standard
T 1668694275 28.:192422tirnanog28:.	pardon me but that code is disgustingly inefficient.
T 1668694305 28.:192424amosbird28:.	Hello! How can I execute a binary with stdin redirect to a file, and fd 3 redirect to another file?
T 1668694321 28.:192424amosbird28:.	Using two input files for the executable
T 1668694337 28.:192422tirnanog28:.	olspookishmagus: perhaps you have column(1) from util-linux available. printf '%s\0' *.webp | xargs -0 identify -format $'%f\t%A\t%[opaque]\n' -- | column -t
T 1668694345 28.:192428emanuele628:.	the_binary its arguments < one_file 3< the_other_file
T 1668694360 28.:192424amosbird28:.	thanks
T 1668694672 28.:192427Earnestly28:.	tirnanog: Oh you know what.  exiftool!
T 1668694738 28.:192427Earnestly28:.	tirnanog: identify can do detection, you can print the format like [WEBP] or so.  But it doesn't handle newlines in filenames and has no nul -0 type flag (and can't easily be added since they use cstrings everywhere).  It can also do, iirc, printf style padding.  However, exiftool could probably do all of this...
T 1668694756 28.:192427Earnestly28:.	tirnanog: (Oh and identify could take multiple arguments too)
T 1668694783 28.:192422tirnanog28:.	yes, that's why I used a printf/xargs combo there.
T 1668694801 28.:192422tirnanog28:.	anyway, sounds good. the man page for exiftool is certainly more helpful.
T 1668694814 28.:192427Earnestly28:.	olspookishmagus: Can you give me example of webp with alpha channels?
T 1668694838 28.:192427Earnestly28:.	exiftool is a bit of a monster but extremely useful once you learn it
T 1668694865 28.:192422tirnanog28:.	Earnestly: https://www.gstatic.com/webp/gallery3/1_webp_a.webp
T 1668694887 28.:192427Earnestly28:.	> [RIFF]          WebP_Flags                      : Alpha
T 1668694909 28.:192427Earnestly28:.	So it could be used then
T 1668695008 28.:192422tirnanog28:.	Earnestly: the issue with newlines is appalling. I was wholly unaware.
T 1668695026 28.:192422tirnanog28:.	oh wait. actually, it seems to work.
T 1668695036 28.:192422tirnanog28:.	what's the problem meant to be?
T 1668695061 28.:192427Earnestly28:.	olspookishmagus: Some notes on exiftool when I was exploring it for metadata management: https://0x0.st/oIxq.txt
T 1668695128 28.:192422olspookishmagus28:.	Earnestly: not now, will do later, ok?
T 1668695135 28.:192422olspookishmagus28:.	I really enjoy your note collections
T 1668695147 28.:192427Earnestly28:.	tirnanog: The -format flag for identify doesn't support \0 iirc
T 1668695192 28.:192422tirnanog28:.	Earnestly: yes. that is irksome.
T 1668695246 28.:192424amosbird28:.	emanuele6: what's the name of this feature?
T 1668695255 28.:192428emanuele628:.	!redirection > amosbird
T 1668695255 28.:192429greybot28:.	amosbird: Redirections: http://mywiki.wooledge.org/Redirection
T 1668695262 28.:192422olspookishmagus28:.	Earnestly: here, this will download as WEBP: https://res.cloudinary.com/Sony-liv/image/fetch/c_fill,e_contrast:30,f_auto,fl_lossy,q_auto:low/e_brightness:10/https://origin-staticv2.sonyliv.com/masthead_logo/PrimeTime_800x800masthead-logo.png
T 1668695266 29»22»22	22olspookishmagus giggles
T 1668695418 28.:192427Earnestly28:.	olspookishmagus: This is why I would have liked to use identify with its %m attribute to detect the actual imagetype rather than depending on extension
T 1668695443 28.:192422olspookishmagus28:.	Earnestly: https://upload.disroot.org/r/fMp1gSA4#g0c0KuK10ZcdJqtQsCko1Dh5GUZ1Og1qK6FgP5HyPLo=
T 1668695449 28.:192428emanuele628:.	amosbird: < is short for 0<  <> is short for 0<>  > is short for 1>    num< file    means open file with O_RDONLY on file descriptor num (a value 0 to 9, in bash you can use any number as an extension). you can use instead of <,  > for O_WRONLY|O_CREAT|O_TRUNC  >> for O_WRONLY|O_CREAT|O_APPEND  <> for O_RDWR|O_CREAT
T 1668695515 28.:192422olspookishmagus28:.	Earnestly: and an example of a WEBP claiming it has alpha channel but I don't see the use of its alpha channel: https://upload.disroot.org/r/50nhVKGU#hoZeFcXHLHEvNBhXnkKPdDQyQ/jK9RDFM6uLQEei1hg=
T 1668695579 28.:192428emanuele628:.	there is also  n>&m   where n and m are numbers (between 0 to 9 in posix, any number in bash) to dup2 the file descriptor from n on m;   and you can use n>&- to close file descriptor n,   in bash you can also use n>&m- which is short for n>&m n>&- ("move file descriptor")
T 1668695631 28.:192428emanuele628:.	you can use either <& or >& for these redirections, there is no difference except that if you omit n, 0 is assumed if you used < and 1 is assumed if you used >
T 1668695656 28.:192427Earnestly28:.	tirnanog: Also magick's @- and such for reading filelists from stdin (which identify and co. support don't support nul delimited input afaict)
T 1668695716 28.:192428emanuele628:.	you must not write e.g.  >& 3    it must be  >&3   otherwise bash reads it as  >& file  which is special syntax short for > file 2>&1
T 1668695724 28.:192428emanuele628:.	but see the wiki page for more info
T 1668695771 28.:192427Earnestly28:.	tirnanog: Oh, it can take filenames enclosed in quotes it seems
T 1668695951 28.:192427Earnestly28:.	tirnanog: Embeded 's don't seem to be escapable
T 1668696075 28.:192427Earnestly28:.	olspookishmagus: The upshot is, exiftool
T 1668696090 28.:192422tirnanog28:.	Earnestly: hmm.
T 1668696134 28.:192427Earnestly28:.	tirnanog: I tried '' and \' but neither appeared to work.  The need for ' is also present if the filename contains spaces; ffmpeg is similar for its list inputs but it does support \' iirc
T 1668696165 28.:192422tirnanog28:.	Earnestly: it's so tiresome to have to reason with these quirks.
T 1668696181 28.:192427Earnestly28:.	imagemagick is quite old so I mostly forgive it, it's so much legacy
T 1668696189 28.:192422tirnanog28:.	yeah, that's true.
T 1668696613 28.:192427Earnestly28:.	tirnanog: It seems to be in property.c line 3630, at least -format stuff
T 1668697016 28.:192427Earnestly28:.	tirnanog: https://0x0.st/oIxY.txt (@-/filename handling)
T 1668697072 28.:192422tirnanog28:.	Earnestly: that may well prove useful. ta.
T 1668697091 28.:192427Earnestly28:.	From what I can tell it doesn't seem to support any escaping mechanism for ' or "
T 1668697116 28.:192427Earnestly28:.	utility.c is also full of stuff
T 1668697156 28.:192424amosbird28:.	emanuele6: thanks!
T 1668697358 28.:192424drterminus28:.	hi, i want to parse a temperature value out of a log an then test the value. can someone help me with this plz cat logs/info_tools.log | awk '$3 == "Temperatur:" {print substr($4, 1, length($4)-4)}' | if  [ $(</dev/stdin) -gt 5 ]; then echo "hello world"; fi;
T 1668697397 28.:192427Earnestly28:.	tirnanog: I found this in my random researchings and it seems useful to know in general https://stackoverflow.com/questions/23748610/fastest-way-to-create-multiple-thumbnails-from-a-single-large-image-in-python/32169224#32169224
T 1668697419 28.:192427Earnestly28:.	drterminus: awk can do the comparison and print hello world
T 1668697433 28.:192428emanuele628:.	and can also read the file without cat
T 1668697463 28.:192424drterminus28:.	how does awk know it is double and not string ?
T 1668697488 28.:192424drterminus28:.	after all i want to monitor the file with tail -fn0
T 1668697507 28.:192428emanuele628:.	ok, so you are trying to compare a fractional number with [ -gt ].. that is not going to work
T 1668697514 28.:192428emanuele628:.	it would work in awk again
T 1668697532 28.:192424drterminus28:.	ah ok
T 1668697542 28.:192424drterminus28:.	ill look into that
T 1668697545 28.:192424drterminus28:.	thx
T 1668697552 28.:192428emanuele628:.	drterminus: can we see how a Temperatur: line looks like in that file?
T 1668697561 28.:192424drterminus28:.	3.5
T 1668697565 28.:192424drterminus28:.	for examle
T 1668697566 28.:192428emanuele628:.	a line.
T 1668697569 28.:192427Earnestly28:.	drterminus: The whole line
T 1668697605 28.:192424drterminus28:.	2022-11-17 17:05:03:INFO:read_save_sensors:Temp. Heizung: 7.6 Luftfeuchte 46.0  aussen -13.125
T 1668697619 28.:192428emanuele628:.	where is "Temperatur:"?
T 1668697651 28.:192424drterminus28:.	ah sorry false line
T 1668697657 28.:192424drterminus28:.	2022-11-17 17:05:02:INFO:sensors:DHT22(nr:22): Temperatur: 7.6°C, Luftfeuchtigkeit: 46.0%
T 1668697773 28.:192427Earnestly28:.	# awk 'BEGIN { hmm = "7.6°C," + 0; if(hmm == 7.6) print "weak typing is fun"}'
T 1668697776 28.:192425shbot28:.	Earnestly: weak typing is fun
T 1668697787 28.:192428emanuele628:.	awk -F 'Temperatur:' '$2 && $2 > 5 { print +$2 }' logs/info_tools.log
T 1668697789 28.:192428emanuele628:.	or
T 1668697798 28.:192428emanuele628:.	awk -F 'Temperatur:' '$2 && $2 > 5 { print "hello world" }' logs/info_tools.log
T 1668697867 28.:192427Earnestly28:.	emanuele6: Doesn't seem to work here
T 1668697917 28.:192424drterminus28:.	here neither
T 1668697920 28.:192428emanuele628:.	# printf '2022-11-17 17:05:02:INFO:sensors:DHT22(nr:22): Temperatur: %s°C, Luftfeuchtigkeit: 46.0%' 7.6 3.2 10.2
T 1668697920 28.:192427Earnestly28:.	awk '$3 == "Temperatur:" && $4 + 0 > 5 { print "hello world"}'
T 1668697924 28.:192425shbot28:.	emanuele6: bash: printf: `%': missing format character
T 1668697924 28.:192425shbot28:.	emanuele6: 2022-11-17 17:05:02:INFO:sensors:DHT22(nr:22): Temperatur: 7.6°C, Luftfeuchtigkeit: 46.0
T 1668697927 28.:192424drterminus28:.	Earnestly: works
T 1668697931 28.:192428emanuele628:.	# printf '2022-11-17 17:05:02:INFO:sensors:DHT22(nr:22): Temperatur: %s°C, Luftfeuchtigkeit: 46.0%%' 7.6 3.2 10.2
T 1668697933 28.:192425shbot28:.	emanuele6: 2022-11-17 17:05:02:INFO:sensors:DHT22(nr:22): Temperatur: 7.6°C, Luftfeuchtigkeit: 46.0%2022-11-17 17:05:02:INFO:sensors:DHT22(nr:22): Temperatur: 3.2°C, Luftfeuchtigkeit: 46.0%2022-11-17 17:05:02:INFO:sensors:DHT22(nr:22): Temperatur: 10.2°C, Luftfeuchtigkeit: 46.0%
T 1668697937 28.:192428emanuele628:.	err
T 1668697940 28.:192428emanuele628:.	# printf '2022-11-17 17:05:02:INFO:sensors:DHT22(nr:22): Temperatur: %s°C, Luftfeuchtigkeit: 46.0%%\\n' 7.6 3.2 10.2
T 1668697942 28.:192425shbot28:.	emanuele6: 2022-11-17 17:05:02:INFO:sensors:DHT22(nr:22): Temperatur: 7.6°C, Luftfeuchtigkeit: 46.0%\n2022-11-17 17:05:02:INFO:sensors:DHT22(nr:22): Temperatur: 3.2°C, Luftfeuchtigkeit: 46.0%\n2022-11-17 17:05:02:INFO:sensors:DHT22(nr:22): Temperatur: 10.2°C, Luftfeuchtigkeit: 46.0%\n
T 1668697951 28.:192428emanuele628:.	# printf '2022-11-17 17:05:02:INFO:sensors:DHT22(nr:22): Temperatur: %s°C, Luftfeuchtigkeit: 46.0%%\n' 7.6 3.2 10.2
T 1668697953 28.:192425shbot28:.	emanuele6: 2022-11-17 17:05:02:INFO:sensors:DHT22(nr:22): Temperatur: 7.6°C, Luftfeuchtigkeit: 46.0%
T 1668697963 28.:192427Earnestly28:.	RIP
T 1668697985 28.:192427Earnestly28:.	drterminus: Usually very good, uses awk in clever ways, often too clever imo
T 1668697987 28.:192427Earnestly28:.	But lots of nice ideas
T 1668698061 28.:192422tirnanog28:.	oh dear. his boundless energy finally got the better of him.
T 1668698089 28.:192427Earnestly28:.	drterminus: Using -F Temperature: would mean that $2 would become: "7.6°C, Luftfeuchtigkeit: 46.0%", and if that was "type cast" using +0 then it'd become 7.6
T 1668698123 28.:192427Earnestly28:.	drterminus: So his would work as: awk -F 'Temperatur:' '$2 && $2+0 > 5 {print "hello world"}'
T 1668698152 28.:192427Earnestly28:.	I prefer using $3 as you did just because it's much clearer
T 1668698244 28.:192425sers28:.	Channel: What's cooler? `(sleep 1m; glxgears -info) & disown' or `sleep 1m && glxgears -info & disown'?
T 1668698352 28.:192422tirnanog28:.	a more appropriate question would be "which behaves in the way that I want?"
T 1668698721 28.:192424drterminus28:.	Earnestly: ty for explaining
T 1668698741 28.:192424drterminus28:.	thx for all your input
T 1668698771 28.:192427Earnestly28:.	drterminus: As a rule, if you introduce a tool like awk, it's best to try and make full use of it.  Same goes for any dependency
T 1668698794 29»22»22	25sers thinks about full use...
T 1668698797 29»22»22	25sers feels like a tool
T 1668698800 28.:192425sers28:.	:)
T 1668698824 28.:192427Earnestly28:.	It's an old unix idea called 'full exploitation'
T 1668698839 28.:192425sers28:.	AWK documentation is so long/extensive.
T 1668698848 29»22»22	25sers can't remember
T 1668698872 28.:192425sers28:.	If I were to remember the entire AWK documentation, I'd probably feel weird.
T 1668699820 28.:192428emanuele628:.	whoops :)
T 1668700582 28.:192427Earnestly28:.	emanuele6: A fix was changing $2 > 5 to $2+0 > 5
T 1668700611 28.:192428emanuele628:.	shouldn't $2 implicitly be treated as a number in that context?
T 1668700684 28.:192428emanuele628:.	by the way, ozone permanently banned me from the network; i had to write an appeal at bans@libera.chat D:
T 1668700716 28.:192428emanuele628:.	isn't it a little excessive to keep it in the channel?
T 1668700755 28.:192419She28:.	ozone bans aren't permanent, but ozone is more meant for combatting bot attacks than general channel management.
T 1668700797 28.:192428emanuele628:.	oh, i see. i assumed it was permanent since it did not tell me an expire date
T 1668700803 28.:192428emanuele628:.	She: thank you again :)
T 1668700864 28.:192427Earnestly28:.	emanuele6: I would have thought so but apparently not
T 1668700814 28»18»	Disconnected ().
T 1668700983 28»18»	Disconnected (Remote host closed socket).
T 1668701040 28»18»	Disconnected (Remote host closed socket).
T 1668701379 25»19»	19Now talking on #bash
T 1668701379 29»22»	22Topic for #bash is: http://mywiki.wooledge.org/BashFAQ | http://mywiki.wooledge.org/BashGuide | http://gnu.org/s/bash/manual | https://wiki.bash-hackers.org/ | http://mywiki.wooledge.org/Quotes | http://www.shellcheck.net/ | https://lists.gnu.org/mailman/listinfo/help-bash | https://git.savannah.gnu.org/cgit/bash.git?h=devel
T 1668701379 29»22»	22Topic for #bash set by twkm at Fri May 21 00:17:30 2021
T 1668701689 28.:192428emanuele628:.	https://pubs.opengroup.org/onlinepubs/9699919799/utilities/awk.html#tag_20_06_13_02
T 1668701723 28.:192428emanuele628:.	> Comparisons (with the '<', "<=", "!=", "==", '>', and ">=" operators) shall be made numerically if both operands are numeric, if one is numeric and the other has a string value that is a numeric string, or if one is numeric and the other has the uninitialized value.
T 1668701743 28.:192427Earnestly28:.	"numeric string"
T 1668701759 28.:192427Earnestly28:.	Oh it even defines what a numeric string is
T 1668701760 28.:192428emanuele628:.	i guess  "7.6°C, Luftfeuchtigkeit: 46.0%"  does not count as a "numeric string" for the current locale
T 1668701763 28.:192427Earnestly28:.	> A string value shall be considered a numeric string if it comes from one of the following:
T 1668701771 28.:192428emanuele628:.	so 5 is converted to a string
T 1668701774 28.:192427Earnestly28:.	> Field variables
T 1668701782 28.:192427Earnestly28:.	emanuele6: Do you think locale changes that?
T 1668701802 28.:192428emanuele628:.	and "For the other operators"(not != or ==)", the strings shall be compared using the locale-specific collation sequence." is performed
T 1668701831 28.:192427Earnestly28:.	awk 'BEGIN {hm = "7.6°C"; if(hm > 5) print "."}'
T 1668701834 28.:192427Earnestly28:.	# awk 'BEGIN {hm = "7.6°C"; if(hm > 5) print "."}'
T 1668701836 28.:192425shbot28:.	Earnestly: .
T 1668701854 28.:192427Earnestly28:.	# LANG=en_US.UTF-8 awk 'BEGIN {hm = "7.6°C"; if(hm > 5) print "."}'
T 1668701856 28.:192425shbot28:.	Earnestly: .
T 1668701881 28.:192427Earnestly28:.	Hmm
T 1668701885 28.:192428emanuele628:.	Earnestly: > and an implementation-dependent condition corresponding to either case (a) or (b) below is met [...] a. [...] setlocale(LC_NUMERIC, "");
T 1668701888 28.:192427Earnestly28:.	# awk 'BEGIN {hm = "7.6°C,"; if(hm > 5) print "."}'
T 1668701890 28.:192425shbot28:.	Earnestly: .
T 1668701907 28.:192427Earnestly28:.	Oh
T 1668701919 28.:192427Earnestly28:.	# awk 'BEGIN {hm = "7.6°C,"; if(hm == 7.6) print "."}'
T 1668701921 28.:192425shbot28:.	Earnestly: no output
T 1668702049 28.:192427Earnestly28:.	This is a bit too confusing me to try and remember, +0 (or any other explicit technique) seems less burdensome
T 1669936876 25»19»	19Now talking on #bash
T 1669936876 29»22»	22Topic for #bash is: http://mywiki.wooledge.org/BashFAQ | http://mywiki.wooledge.org/BashGuide | http://gnu.org/s/bash/manual | https://wiki.bash-hackers.org/ | http://mywiki.wooledge.org/Quotes | http://www.shellcheck.net/ | https://lists.gnu.org/mailman/listinfo/help-bash | https://git.savannah.gnu.org/cgit/bash.git?h=devel
T 1669936876 29»22»	22Topic for #bash set by twkm at Fri May 21 00:17:30 2021
T 1669936713 28»18»	Disconnected ().
T 1669937065 24»23»23	woland sets modes (woland :+Ziw)
T 1669937065 28-21Notice28-	21{28from SaslServ21} Last login from: ~woland@static.247.176.55.162.clients.your-server.de on Dec 01 23:23:22 2022 +0000.
T 1669937071 25»19»	19Now talking on #bash
T 1669937071 29»22»	22Topic for #bash is: http://mywiki.wooledge.org/BashFAQ | http://mywiki.wooledge.org/BashGuide | http://gnu.org/s/bash/manual | https://wiki.bash-hackers.org/ | http://mywiki.wooledge.org/Quotes | http://www.shellcheck.net/ | https://lists.gnu.org/mailman/listinfo/help-bash | https://git.savannah.gnu.org/cgit/bash.git?h=devel
T 1669937071 29»22»	22Topic for #bash set by twkm at Fri May 21 00:17:30 2021
T 1669936947 19.:2823woland19:.	is it possible to have dialog take menu items from a list stored in a file or a VAR?
T 1669937253 28»18»	Disconnected ().
T 1669937306 28»18»	Disconnected (Remote host closed socket).
T 1669938046 25»19»	19Now talking on #bash
T 1669938046 29»22»	22Topic for #bash is: http://mywiki.wooledge.org/BashFAQ | http://mywiki.wooledge.org/BashGuide | http://gnu.org/s/bash/manual | https://wiki.bash-hackers.org/ | http://mywiki.wooledge.org/Quotes | http://www.shellcheck.net/ | https://lists.gnu.org/mailman/listinfo/help-bash | https://git.savannah.gnu.org/cgit/bash.git?h=devel
T 1669938046 29»22»	22Topic for #bash set by twkm at Fri May 21 00:17:30 2021
T 1669997436 25»19»	19Now talking on #bash
T 1669997436 29»22»	22Topic for #bash is: http://mywiki.wooledge.org/BashFAQ | http://mywiki.wooledge.org/BashGuide | http://gnu.org/s/bash/manual | https://wiki.bash-hackers.org/ | http://mywiki.wooledge.org/Quotes | http://www.shellcheck.net/ | https://lists.gnu.org/mailman/listinfo/help-bash | https://git.savannah.gnu.org/cgit/bash.git?h=devel
T 1669997436 29»22»	22Topic for #bash set by twkm at Fri May 21 00:17:30 2021
T 1669997555 25»19»	19Now talking on #bash
T 1669997555 29»22»	22Topic for #bash is: http://mywiki.wooledge.org/BashFAQ | http://mywiki.wooledge.org/BashGuide | http://gnu.org/s/bash/manual | https://wiki.bash-hackers.org/ | http://mywiki.wooledge.org/Quotes | http://www.shellcheck.net/ | https://lists.gnu.org/mailman/listinfo/help-bash | https://git.savannah.gnu.org/cgit/bash.git?h=devel
T 1669997555 29»22»	22Topic for #bash set by twkm at Fri May 21 00:17:30 2021
T 1669997605 28.:192426lopid28:.	declare -p var > file
T 1669997283 19.:2823woland19:.	can someone help me fix this integer expression error? http://0x0.st/okA7.sh idk what I'm doing wrong
T 1669997721 28.:192429phy172928:.	You have floats not integers and [ doesn't do floats
T 1669997736 28.:192426lopid28:.	doesn't float down there
T 1669997479 19.:2823woland19:.	Ah!
T 1669997829 28.:192424Enissay28:.	lopid: Almost... but everything is escaped, cannot be executed :<
T 1669997879 28.:192426lopid28:.	eval?
T 1669998376 28.:192428emanuele628:.	printf '%s\n' "$tmp_cmd" > file  ?
T 1669998475 19.:2823woland19:.	phy1729: fixed it with bc, thanks
T 1670376043 25»19»	19Now talking on #bash
T 1670376043 29»22»	22Topic for #bash is: http://mywiki.wooledge.org/BashFAQ | http://mywiki.wooledge.org/BashGuide | http://gnu.org/s/bash/manual | https://wiki.bash-hackers.org/ | http://mywiki.wooledge.org/Quotes | http://www.shellcheck.net/ | https://lists.gnu.org/mailman/listinfo/help-bash | https://git.savannah.gnu.org/cgit/bash.git?h=devel
T 1670376043 29»22»	22Topic for #bash set by twkm at Fri May 21 00:17:30 2021
T 1670375777 28»18»	Disconnected ().
T 1670376129 25»19»	19Now talking on #bash
T 1670376129 29»22»	22Topic for #bash is: http://mywiki.wooledge.org/BashFAQ | http://mywiki.wooledge.org/BashGuide | http://gnu.org/s/bash/manual | https://wiki.bash-hackers.org/ | http://mywiki.wooledge.org/Quotes | http://www.shellcheck.net/ | https://lists.gnu.org/mailman/listinfo/help-bash | https://git.savannah.gnu.org/cgit/bash.git?h=devel
T 1670376129 29»22»	22Topic for #bash set by twkm at Fri May 21 00:17:30 2021
T 1670375789 28»18»	woland already in use. Retrying with ...
T 1670375842 28»18»	Disconnected (Remote host closed socket).
T 1670375903 28»18»	Disconnected (Remote host closed socket).
T 1670376979 25»19»	19Now talking on #bash
T 1670376979 29»22»	22Topic for #bash is: http://mywiki.wooledge.org/BashFAQ | http://mywiki.wooledge.org/BashGuide | http://gnu.org/s/bash/manual | https://wiki.bash-hackers.org/ | http://mywiki.wooledge.org/Quotes | http://www.shellcheck.net/ | https://lists.gnu.org/mailman/listinfo/help-bash | https://git.savannah.gnu.org/cgit/bash.git?h=devel
T 1670376979 29»22»	22Topic for #bash set by twkm at Fri May 21 00:17:30 2021
T 1670380663 28.:192420wad28:.	I've got a bash script running with -e, that it stops if a command returns an error signal. Is there a way to prevent this for one command in it?
T 1670380821 28.:192420wad28:.	I'm thinking there might be some way of intercepting an exit code before it gets to the shell?
T 1670381282 28.:192429phy172928:.	!-e
T 1670381282 28.:19+2429greybot28:.	"set -e" is an inheritance of the old bourne shell, and doesn't really work well with modern shell features. You'll really have less buggy scripts if you do the error handling manually instead of relying on the unreliable "set -e"; see http://mywiki.wooledge.org/BashFAQ/105
T 1670444010 25»19»	19Now talking on #bash
T 1670444010 29»22»	22Topic for #bash is: http://mywiki.wooledge.org/BashFAQ | http://mywiki.wooledge.org/BashGuide | http://gnu.org/s/bash/manual | https://wiki.bash-hackers.org/ | http://mywiki.wooledge.org/Quotes | http://www.shellcheck.net/ | https://lists.gnu.org/mailman/listinfo/help-bash | https://git.savannah.gnu.org/cgit/bash.git?h=devel
T 1670444010 29»22»	22Topic for #bash set by twkm at Fri May 21 00:17:30 2021
T 1670444535 28.:192424Nintendo28:.	A coworker's bash doesn't even have mapfile...
T 1670444554 28.:192425greycat28:.	mapfile is in bash 4.0
T 1670444566 28.:192424Nintendo28:.	They're rocking 3.2.57.
T 1670444568 28.:192425greycat28:.	so if they're on a Mac with bash 3.2, that would do it
T 1670444568 28.:192424Nintendo28:.	Yay for Mac.
T 1670444603 28.:192424Nintendo28:.	Any good resources for upgrading?
T 1670444604 28.:192425ormaaj28:.	you can write mapfile as a bash function it'll just be slow.
T 1670444673 28.:192425ormaaj28:.	yeah you can buy better computers almost anywhere
T 1670444691 28.:192424Nintendo28:.	I get the feeling that we're going to run into more problems than just mapfile...
T 1670444714 28.:192425ormaaj28:.	:)
T 1670444720 28.:192425greycat28:.	The single biggest thing in 4.0+ that's not in 3.2 is associative arrays.
T 1670444757 28.:192425greycat28:.	(and you can't do that one with a simple function)
T 1670444765 28.:192425neshpion28:.	i thought macos switched to zsh
T 1670444797 28.:192424Nintendo28:.	They did.  But bash scripts did not. 😉
T 1670444816 28.:192425ormaaj28:.	I hear of people installing bash through that apple package manager thing all the time and have never heard of problems
T 1670444822 28.:192425neshpion28:.	ln -s /bin/zsh /bin/bash :^)
T 1670444845 28.:192424Nintendo28:.	Ahh, interesting idea, neshpion... I do not want to rock this person's world just yet, though.
T 1670444908 28.:192425ormaaj28:.	that is completely dumb. #zsh would surely agree.
T 1670445026 28.:192425neshpion28:.	sometimes the dumb answer is the best answer though :^)
T 1670445047 28.:192425greycat28:.	If it's the best answer, it wouldn't be called dumb.
T 1670448758 28.:192428tangy28:.	there is an old adage, 'sometimes the worst horse is the best horse.'
T 1670448783 28.:192422phogg28:.	meaning what?
T 1670449039 28.:192427Earnestly28:.	phogg: Seems to mean something related to the idea that something bad has more room to improve
T 1670449108 28.:192425neshpion28:.	it's from a zen parable which has a moral lesson about the depth of learning potential. the best horse has no improvement to make, but the worst one's journey can be the richest in terms of growth. "In your very imperfections you will find the basis for your firm, way-seeking mind. So I think that sometimes the best horse may be the worst horse, and the worst horse can be the best one."
T 1670449170 28.:192428tangy28:.	yes, suzuki, zen mind beginner's mind, part 1, the marrow of zen
T 1670449271 28.:192425neshpion28:.	but with regard to what prompted this, there's another adage: "it's not stupid if it works" :^^^^^)
T 1670449296 28.:192425greycat28:.	hah
T 1670449307 28.:192427Earnestly28:.	neshpion: http://i.imgur.com/cG9Te.jpg
T 1670449319 28.:192425greycat28:.	I appreciate that, but one must also be careful how one judges "works".
T 1670449374 28.:192425greycat28:.	all of the "classic" shell scripting paradigms that fall to pieces on unusual filenames may "work" on 99.99% of systems, but they're still stupid
T 1670449391 28.:192427Earnestly28:.	I mean, any fool can build a bridge but only an engineer has the potential to do it on time and under budget - that noted, I doubt most fools can even build bridges
T 1670449609 28.:192425ormaaj28:.	Almost finished reimplementing my init system in malbolge. Confident it will work!
T 1670449624 28.:192422phogg28:.	lol
T 1670449673 28.:192427Earnestly28:.	dangerous engineering
T 1670449708 28.:192425neshpion28:.	dangineering
T 1670449747 28.:192425neshpion28:.	wouldn't that be an oxymoron though?
T 1670449785 28.:192425greycat28:.	No.  The two terms aren't opposites.
T 1670449846 28.:192427Earnestly28:.	neshpion: dangineering is likely whatever jigsaw does
T 1670507652 25»19»	19Now talking on #bash
T 1670507652 29»22»	22Topic for #bash is: http://mywiki.wooledge.org/BashFAQ | http://mywiki.wooledge.org/BashGuide | http://gnu.org/s/bash/manual | https://wiki.bash-hackers.org/ | http://mywiki.wooledge.org/Quotes | http://www.shellcheck.net/ | https://lists.gnu.org/mailman/listinfo/help-bash | https://git.savannah.gnu.org/cgit/bash.git?h=devel
T 1670507652 29»22»	22Topic for #bash set by twkm at Fri May 21 00:17:30 2021
T 1670508877 25»19»	19Now talking on #bash
T 1670508877 29»22»	22Topic for #bash is: http://mywiki.wooledge.org/BashFAQ | http://mywiki.wooledge.org/BashGuide | http://gnu.org/s/bash/manual | https://wiki.bash-hackers.org/ | http://mywiki.wooledge.org/Quotes | http://www.shellcheck.net/ | https://lists.gnu.org/mailman/listinfo/help-bash | https://git.savannah.gnu.org/cgit/bash.git?h=devel
T 1670508877 29»22»	22Topic for #bash set by twkm at Fri May 21 00:17:30 2021
T 1670552244 25»19»	19Now talking on #bash
T 1670552244 29»22»	22Topic for #bash is: http://mywiki.wooledge.org/BashFAQ | http://mywiki.wooledge.org/BashGuide | http://gnu.org/s/bash/manual | https://wiki.bash-hackers.org/ | http://mywiki.wooledge.org/Quotes | http://www.shellcheck.net/ | https://lists.gnu.org/mailman/listinfo/help-bash | https://git.savannah.gnu.org/cgit/bash.git?h=devel
T 1670552244 29»22»	22Topic for #bash set by twkm at Fri May 21 00:17:30 2021
T 1670552366 28»18»	Disconnected ().
T 1670552441 28»18»	Disconnected (Remote host closed socket).
T 1670552515 28»18»	Disconnected (Remote host closed socket).
T 1670552561 28»18»	Disconnected (Remote host closed socket).
T 1670552928 25»19»	19Now talking on #bash
T 1670552928 29»22»	22Topic for #bash is: http://mywiki.wooledge.org/BashFAQ | http://mywiki.wooledge.org/BashGuide | http://gnu.org/s/bash/manual | https://wiki.bash-hackers.org/ | http://mywiki.wooledge.org/Quotes | http://www.shellcheck.net/ | https://lists.gnu.org/mailman/listinfo/help-bash | https://git.savannah.gnu.org/cgit/bash.git?h=devel
T 1670552928 29»22»	22Topic for #bash set by twkm at Fri May 21 00:17:30 2021
T 1670552666 28»18»	Disconnected ().
T 1670553034 25»19»	19Now talking on #bash
T 1670553034 29»22»	22Topic for #bash is: http://mywiki.wooledge.org/BashFAQ | http://mywiki.wooledge.org/BashGuide | http://gnu.org/s/bash/manual | https://wiki.bash-hackers.org/ | http://mywiki.wooledge.org/Quotes | http://www.shellcheck.net/ | https://lists.gnu.org/mailman/listinfo/help-bash | https://git.savannah.gnu.org/cgit/bash.git?h=devel
T 1670553034 29»22»	22Topic for #bash set by twkm at Fri May 21 00:17:30 2021
T 1670555606 28»18»	Disconnected ().
T 1670555676 28»18»	Disconnected (Remote host closed socket).
T 1670555736 28»18»	Disconnected (Remote host closed socket).
T 1670555809 28»18»	Disconnected (Remote host closed socket).
T 1670556178 25»19»	19Now talking on #bash
T 1670556178 29»22»	22Topic for #bash is: http://mywiki.wooledge.org/BashFAQ | http://mywiki.wooledge.org/BashGuide | http://gnu.org/s/bash/manual | https://wiki.bash-hackers.org/ | http://mywiki.wooledge.org/Quotes | http://www.shellcheck.net/ | https://lists.gnu.org/mailman/listinfo/help-bash | https://git.savannah.gnu.org/cgit/bash.git?h=devel
T 1670556178 29»22»	22Topic for #bash set by twkm at Fri May 21 00:17:30 2021
T 1670556056 28»18»	Disconnected ().
T 1670556119 28»18»	Disconnected (Remote host closed socket).
T 1670556183 28»18»	Disconnected (Remote host closed socket).
T 1670556375 28»18»	Disconnected (Remote host closed socket).
T 1670556568 28»18»	Disconnected (Remote host closed socket).
T 1670556937 25»19»	19Now talking on #bash
T 1670556937 29»22»	22Topic for #bash is: http://mywiki.wooledge.org/BashFAQ | http://mywiki.wooledge.org/BashGuide | http://gnu.org/s/bash/manual | https://wiki.bash-hackers.org/ | http://mywiki.wooledge.org/Quotes | http://www.shellcheck.net/ | https://lists.gnu.org/mailman/listinfo/help-bash | https://git.savannah.gnu.org/cgit/bash.git?h=devel
T 1670556937 29»22»	22Topic for #bash set by twkm at Fri May 21 00:17:30 2021
T 1670556959 28.:192420FreeBDSM_28:.	ah, remembered, no need for double quotes around that var
T 1670556977 28.:192425ormaaj28:.	eval?
T 1670556978 28.:192429phy172928:.	!faq complex
T 1670556979 28.:19+2429greybot28:.	https://mywiki.wooledge.org/BashFAQ/050 -- I'm trying to put a command in a variable, but the complex cases always fail!
T 1670556987 28.:192429phy172928:.	use an array
T 1670557012 28.:192425ormaaj28:.	oh nvm.
T 1670557040 28.:192420FreeBDSM_28:.	wait, omitting double quotes still resulted into an error pointing at the wrong use of args
T 1670557151 28.:192425ormaaj28:.	"${args}" is dumb. Impossible to answer without knowing why you have this dumb variable in the first place.
T 1670557182 28.:192420FreeBDSM_28:.	https://paste.sh/L5U5xa-Q#p6pmAf1W6NcW35ELZXZCkZLB
T 1670557188 28.:192425ormaaj28:.	99% chance it will be "use an array"
T 1670557200 28.:192420FreeBDSM_28:.	I tried to use an array ^ way
T 1670557219 28.:192420FreeBDSM_28:.	still getting the same errors as if I used variable without quotes
T 1670557266 28.:192420FreeBDSM_28:.	curl: (6) could not resolve host: application, curl: (6) could not resolve host: application, curl: (6) could not resolve host: Bearer, curl: (6) could not resolve host: mytoken
T 1670557273 28.:192425ormaaj28:.	>:-(
T 1670557330 28.:192420FreeBDSM_28:.	god damn it! needed double quotes around array var!
T 1670557493 28.:192425ormaaj28:.	Dude you've been here for over a year. There is no way you don't know that.
T 1670557638 28.:192420FreeBDSM_28:.	can't remember that stuff as there seems to be no logic behind it, have to just try all possible variants anyways
T 1670557742 28.:192425ormaaj28:.	anything that expands to multiple arguments needs quotes always. Kind of a pattern there.
T 1670557884 28.:192420FreeBDSM_28:.	if I don't use array and use `curl ${args} "${url}"` (without double quotes around args) - why does bash seems to remove the single quotes around args values containing spaces? I didn't ask it to do that
T 1670557933 28.:192425ormaaj28:.	Because field splitting
T 1670557951 28.:192425ormaaj28:.	it doesn't actually do that. The behavior depends on the value of IFS
T 1670557960 28.:192425ormaaj28:.	if IFS contains quotes then sure
T 1670558035 28.:192420FreeBDSM_28:.	https://paste.sh/8lrjQB3v#JEtwCxysur8mL_FyPzHHJIuh I mean that there's a difference between line 7 and 9, but bash makes them the same
T 1670558101 28.:192425ormaaj28:.	it doesn't
T 1670558161 28.:192425ormaaj28:.	single quotes inside of double quotes is a red flag that you're doing something wrong
T 1670558201 28.:192420FreeBDSM_28:.	that's like a personal attack!
T 1670558224 28.:192425ormaaj28:.	All you really need to know is that field splitting is broken. Understanding how it works doesn't change the fact that you should never use it.
T 1670558357 28.:192420FreeBDSM_28:.	as for your "it doesn't actually do that" - in both cases the output of the script is the same
T 1670558414 28.:192420FreeBDSM_28:.	and I tried to add `IFS+="'"` and that didn't change anything
T 1670558506 28.:192425ormaaj28:.	# curl_args="-k -H 'Accept: application/json' -H 'Content-Type: application/json' -H 'Authorization: Bearer ${token}'" curl_args2="-k -H Accept: application/json -H Content-Type: application/json -H Authorization: Bearer ${token}"; printf '<%s> ' $curl_args; echo; printf '<%s> ' $curl_args2; echo
T 1670558510 28.:19+2425shbot28:.	ormaaj: <-k> <-H> <'Accept:> <application/json'> <-H> <'Content-Type:> <application/json'> <-H> <'Authorization:> <Bearer> <'>
T 1670558510 28.:19+2425shbot28:.	ormaaj: <-k> <-H> <Accept:> <application/json> <-H> <Content-Type:> <application/json> <-H> <Authorization:> <Bearer>
T 1670558528 28.:192425ormaaj28:.	not same. thanks for playing.
T 1670558550 28.:192420FreeBDSM_28:.	ah, so it's curl that filters some more
T 1670558555 28.:192420FreeBDSM_28:.	thanks for illustrating
